@using SmevRouter
@using Sentry
@model AisLogistics.App.ViewModels.Cases.SmevCreateResponseModel
@{
    var applicants = Model.GetApplicants();
    var request = new GetGiacCriminalV11RequestData
            {
                Applicant = new GiacApplicantDataV11
                {
                    Fio = new FioType()
                },
                Personal = new GiacPersonalDataV11
                {
                    Fio = new FioType(),
                    Addresses = new[] { new GiacAddressV11() }
                },
                Attachments = new[] { new RequestAttachment() },
            };
}

<style>
    #smev-data-form-content .applicants + span .select2-selection.select2-selection--single {
        background-color: #e5edfc !important;
    }

    #smev-request-tabContent .tab-pane {
        height: 550px;
    }
</style>

<div class="row justify-content-center" id="smev_request">
    <div class="col-10">
        <ul class="nav nav-tabs nav-justified tabs-line mb-3" id="smev-request-tablist" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" data-bs-toggle="pill" data-bs-target="#smev-request-tab1" type="button">Данные заявителя</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" data-bs-toggle="pill" data-bs-target="#smev-request-tab2" type="button">Данные лица, подлежащего проверке</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" data-bs-toggle="pill" data-bs-target="#smev-request-tab3" type="button">Документы</button>
            </li>
        </ul>
        <div class="tab-content" id="smev-request-tabContent">
            <div class="tab-pane fade show active" id="smev-request-tab1" role="tabpanel">
                <div class="row g-3">
                    <div class="col-12 mx-auto">
                        <div class="divider text-start">
                            <div class="divider-text fs-5 b-s-16">Параметры запроса</div>
                        </div>
                    </div>
                </div>
                <div class="row justify-content-center">
                    <div class="col-10">
                        <div class="row mb-1 align-items-end">
                            <div class="col-9">
                                <label class="form-label" asp-for="@request.Addressee">Направление запроса</label>
                                <select class="form-select select2-search required" asp-for="@request.Addressee"
                                        data-dictionary='{"dictionary":"GiacRegionCodes"}'>
                                </select>
                            </div>
                            <div class="col-3">
                                <label class="form-label" asp-for="@request.Exemplars">Кол-во экземпляров справки</label>
                                <input type="number" class="form-control required" min="1" value="1" placeholder="Кол-во экземпляров справки" asp-for="@request.Exemplars">
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div class="col-12">
                                <label class="form-label" asp-for="@request.Comments">Комментарий</label>
                                <input type="text" class="form-control" placeholder="Комментарий" asp-for="@request.Comments">
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div class="col-12">
                                <label class="form-label" asp-for="@request.Applicant.ApplicantType">Способ обращения</label>
                                <select class="form-select select2-nosearch required" asp-for="@request.Applicant.ApplicantType"
                                        data-dictionary='{"dictionary":"GiacApplicantTypes"}'>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row g-3">
                    <div class="col-12 mx-auto">
                        <div class="divider text-start">
                            <div class="divider-text fs-5 b-s-16">Персональные данные заявителя</div>
                        </div>
                    </div>
                </div>
                <div class="row justify-content-center" data-person>
                    <div class="col-10">
                        <div class="row mb-1">
                            <div class="col-12">
                                <label class="form-label">Заявители</label>
                                <select class="form-select select2-nosearch applicants">
                                    <option value="">Выберите заявителя</option>
                                    @for (int i = 0; i < applicants.Count; i++)
                                    {
                                        <option value="@i">@applicants[i].LastName @applicants[i].FirstName @applicants[i].SecondName</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div class="col-4">
                                <label class="form-label" asp-for="@request.Applicant.Fio.LastName">Фамилия</label>
                                <input type="text" class="form-control required" placeholder="Фамилия" asp-for="@request.Applicant.Fio.LastName" />
                            </div>
                            <div class="col-4">
                                <label class="form-label" asp-for="@request.Applicant.Fio.FirstName">Имя</label>
                                <input type="text" class="form-control required" placeholder="Имя" asp-for="@request.Applicant.Fio.FirstName">
                            </div>
                            <div class="col-4">
                                <label class="form-label" asp-for="@request.Applicant.Fio.SecondName">Отчество</label>
                                <input type="text" class="form-control" placeholder="Отчество" asp-for="@request.Applicant.Fio.SecondName">
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div class="col-8">
                                <label class="form-label" asp-for="@request.Applicant.BirthPlace">Место рождения</label>
                                <input type="text" class="form-control required" placeholder="Место рождения" asp-for="@request.Applicant.BirthPlace">
                            </div>
                            <div class="col-4">
                                <label class="form-label" asp-for="@request.Applicant.BirthDate">Дата рождения</label>
                                <div class="input-group input-group-merge">
                                    <span class="input-group-text"><i class="bx bx-calendar"></i></span>
                                    <input asp-for="@request.Applicant.BirthDate" type="text" class="form-control pickadate required" placeholder="Дата рождения">
                                </div>
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div class="col-3">
                                <label class="form-label" asp-for="@request.Applicant.AddressType">Тип адреса</label>
                                <select class="form-select select2-nosearch required" asp-for="@request.Applicant.AddressType"
                                        data-dictionary='{"dictionary":"GiacAddressTypes"}'>
                                </select>
                            </div>
                            <div class="col-9">
                                <label class="form-label" asp-for="@request.Applicant.Address">Адрес</label>
                                <input type="text" class="form-control required" placeholder="Адрес" asp-for="@request.Applicant.Address">
                            </div>
                            <div class="col-3">
                                <label class="form-label" asp-for="@request.Applicant.Snils">СНИЛС</label>
                                <input type="text" class="form-control snils" placeholder="СНИЛС" asp-for="@request.Applicant.Snils">
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div class="col-12">
                                <label class="form-label" asp-for="@request.Applicant.DocumentCode">Тип документа</label>
                                <select class="form-select select2-nosearch required" asp-for="@request.Applicant.DocumentCode"
                                        data-dictionary='{"dictionary":"PrimaryDocumentCodes"}'>
                                </select>
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div class="col-4">
                                <label class="form-label" asp-for="@request.Applicant.DocSeries">Серия</label>
                                <input type="text" class="form-control required" placeholder="Серия" asp-for="@request.Applicant.DocSeries">
                            </div>
                            <div class="col-4">
                                <label class="form-label" asp-for="@request.Applicant.DocNumber">Номер</label>
                                <input type="text" class="form-control required" placeholder="Номер" asp-for="@request.Applicant.DocNumber">
                            </div>
                            <div class="col-4">
                                <label class="form-label" asp-for="@request.Applicant.DocIssueDate">Дата выдачи</label>
                                <div class="input-group input-group-merge">
                                    <span class="input-group-text"><i class="bx bx-calendar"></i></span>
                                    <input asp-for="@request.Applicant.DocIssueDate" type="text" class="form-control pickadate required" placeholder="Дата выдачи">
                                </div>
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div class="col-12">
                                <label class="form-label" asp-for="@request.Applicant.DocIssuer">Кем выдан</label>
                                <input type="text" class="form-control required" placeholder="Кем выдан" asp-for="@request.Applicant.DocIssuer">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="smev-request-tab2" role="tabpanel">
                <div class="row justify-content-center mb-3" data-person>
                    <div class="col-10">
                        <div class="row mb-1">
                            <div class="col-12">
                                <label class="form-label">Заявители</label>
                                <select class="form-select select2-nosearch applicants">
                                    <option value="">Выберите заявителя</option>
                                    @for (int i = 0; i < applicants.Count; i++)
                                    {
                                        <option value="@i">@applicants[i].LastName @applicants[i].FirstName @applicants[i].SecondName</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div class="col-4">
                                <label class="form-label" asp-for="@request.Personal.Fio.LastName">Фамилия</label>
                                <input type="text" class="form-control required" placeholder="Фамилия" asp-for="@request.Personal.Fio.LastName" />
                            </div>
                            <div class="col-4">
                                <label class="form-label" asp-for="@request.Personal.Fio.FirstName">Имя</label>
                                <input type="text" class="form-control required" placeholder="Имя" asp-for="@request.Personal.Fio.FirstName">
                            </div>
                            <div class="col-4">
                                <label class="form-label" asp-for="@request.Personal.Fio.SecondName">Отчество</label>
                                <input type="text" class="form-control" placeholder="Отчество" asp-for="@request.Personal.Fio.SecondName">
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div class="col-8">
                                <label class="form-label" asp-for="@request.Personal.BirthPlace">Место рождения</label>
                                <input type="text" class="form-control required" placeholder="Место рождения" asp-for="@request.Personal.BirthPlace">
                            </div>
                            <div class="col-4">
                                <label class="form-label" asp-for="@request.Personal.BirthDate">Дата рождения</label>
                                <div class="input-group input-group-merge">
                                    <span class="input-group-text"><i class="bx bx-calendar"></i></span>
                                    <input asp-for="@request.Personal.BirthDate" type="text" class="form-control pickadate required" placeholder="Дата рождения">
                                </div>
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div class="col-12">
                                <label class="form-label" asp-for="@request.Personal.DocumentCode">Тип документа</label>
                                <select class="form-select select2-nosearch required" asp-for="@request.Personal.DocumentCode"
                                        data-dictionary='{"dictionary":"PrimaryDocumentCodes"}'>
                                </select>
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div class="col-4">
                                <label class="form-label" asp-for="@request.Personal.DocSeries">Серия</label>
                                <input type="text" class="form-control required" placeholder="Серия" asp-for="@request.Personal.DocSeries">
                            </div>
                            <div class="col-4">
                                <label class="form-label" asp-for="@request.Personal.DocNumber">Номер</label>
                                <input type="text" class="form-control required" placeholder="Номер" asp-for="@request.Personal.DocNumber">
                            </div>
                            <div class="col-4">
                                <label class="form-label" asp-for="@request.Personal.DocIssueDate">Дата выдачи</label>
                                <div class="input-group input-group-merge">
                                    <span class="input-group-text"><i class="bx bx-calendar"></i></span>
                                    <input asp-for="@request.Personal.DocIssueDate" type="text" class="form-control pickadate required" placeholder="Дата выдачи">
                                </div>
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div class="col-9">
                                <label class="form-label" asp-for="@request.Personal.DocIssuer">Кем выдан</label>
                                <input type="text" class="form-control required" placeholder="Кем выдан" asp-for="@request.Personal.DocIssuer">
                            </div>
                            <div class="col-3">
                                <label class="form-label" asp-for="@request.Personal.Snils">СНИЛС</label>
                                <input type="text" class="form-control snils" placeholder="СНИЛС" asp-for="@request.Personal.Snils">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row justify-content-between g-3  mb-3">
                    <div class="col-12 form-check form-switch">
                        <input class="form-check-input" type="checkbox" id="Previous">
                        <label class="form-check-label fs-6 b-s-16" for="Previous">Предыдущие ФИО лица, подлежащего проверке</label>
                    </div>
                </div>
                <div class="row justify-content-center mb-1" id="PreviousNames">
                                  
                </div>
                <div class="justify-content-center row mb-3" id="add-button">
                    <div class="col-2">
                        <div class="text-center mt-3">
                            <button type="button " id="add-PreviousNames" class="btn btn-primary">
                                Добавить
                            </button>
                        </div>
                    </div>
                </div>
                <div class="row justify-content-between g-3">
                    <div class="col-7">
                        <span class="divider-text fs-5 b-s-16">Регионы, где проживал, пребывал, проходил службу</span>
                    </div>
                    <div class="col-2"><i id="add-address" role="button" class="bx bx-plus bx-md"></i></div>
                </div>
                <div class="row justify-content-center mb-1" id="addresses">
                </div>
                <br/>
            </div>
            <div class="tab-pane fade" id="smev-request-tab3" role="tabpanel">
                <div class="row justify-content-end">
                    <div class="col-10">
                        <button type="button" class="btn btn-outline-secondary buttons_height lh-1" onclick="getServiceDocuments()">
                            ОБНОВИТЬ
                        </button>
                        <button type="button" class="btn btn-outline-secondary buttons_height lh-1" data-upload-type="Desktop">
                            ЗАГР
                        </button>
                        <button type="button" class="btn btn-outline-secondary buttons_height lh-1" data-upload-type="Scan">
                            СКАН
                        </button>
                    </div>
                </div>
                <div class="row justify-content-center">
                    <div class="col-12">
                        <table id="attachmentsBlock" class="table table-hover table-striped" style="table-layout: fixed">
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                    <div class="col-10" id="noDocuments" style="display:none">
                        <div class="alert alert-primary" role="alert">
                            <h6 class="alert-heading mb-1">Нет документов</h6>
                            <span>Добавьте файлы к услуге</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-10" id="addressOriginal">
    <div class="row align-items-center">
        <div class="col-3">
            <label class="form-label" asp-for="@request.Personal.Addresses[0].AddressType">Тип адреса</label>
            <select class="form-select select2-nosearch required" asp-for="@request.Personal.Addresses[0].AddressType"
                    data-dictionary='{"dictionary":"GiacAddressTypes"}'>
            </select>
        </div>
        <div class="col-3">
            <label class="form-label" asp-for="@request.Personal.Addresses[0].RegionCode">Регион</label>
            <select class="form-select select2-search required" asp-for="@request.Personal.Addresses[0].RegionCode"
                    data-dictionary='{"dictionary":"GiacRegionCodesSmall"}'>
            </select>
        </div>
        <div class="col-5">
            <label class="form-label" asp-for="@request.Personal.Addresses[0].Address">Адрес</label>
            <input type="text" class="form-control required" placeholder="Адрес" asp-for="@request.Personal.Addresses[0].Address">
        </div>
        <div class="col-1">
            <i class="bx bx-trash-alt bx-md" role="button" onclick="blockRemove(this, '#addresses')"></i>
        </div>
    </div>
    <hr />
</div>

<div class="col-10" id="previousNamesOriginal">
    <div class="row align-items-center">
        <div class="col-11">
            <div class="row mb-1">
                <div class="col-4">
                    <label class="form-label" asp-for="@request.Personal.PreviousNames[0].LastName">Фамилия</label>
                    <input type="text" class="form-control" placeholder="Фамилия" asp-for="@request.Personal.PreviousNames[0].LastName"/>
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="@request.Personal.PreviousNames[0].FirstName">Имя</label>
                    <input type="text" class="form-control" placeholder="Имя" asp-for="@request.Personal.PreviousNames[0].FirstName">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="@request.Personal.PreviousNames[0].SecondName">Отчество</label>
                    <input type="text" class="form-control" placeholder="Отчество" asp-for="@request.Personal.PreviousNames[0].SecondName">
                </div>
            </div>
        </div>
        <div class="col-1 mt-3">
            <button type="button" class="btn btn-danger" onclick="blockRemove(this, '#PreviousNames')">
                <i class="bx bx-trash-alt bx-sm"></i>
            </button>
        </div>
    </div>
</div>
<script>
    var applicants = @Json.Serialize(applicants);
    var formContent = document.getElementById("smev-data-form-content");
    var documentId;
    var smevForm = {
        init: () => {
            renameBlock(formContent.querySelector('#addressOriginal'), 100, true);
            renameBlock(formContent.querySelector('#previousNamesOriginal'), 100, true);
            
            visibilityBlock($('#addressOriginal'), true, true);
            visibilityBlock($('#previousNamesOriginal'), true, true);
            
            fileUploadInit($(formContent));
            
            $('#smev_request').find('.pickadate').each(function() {
                            $(this).val('');
            });
           
            $('#add-address').on('click', function() {
                addForm('addresses', 'addressOriginal');
            });
            $('#add-PreviousNames').on('click', function() {
                addForm('PreviousNames', 'previousNamesOriginal');
            });
            addForm('addresses', 'addressOriginal');
            addForm('PreviousNames', 'previousNamesOriginal');
            //$(formContent).find('.tab-pane').each(function() {
            //    new PerfectScrollbar($(this)[0], { useBothWheelAxes: false, suppressScrollX: true});
            //});

            //new Tagify(formContent.querySelector('[name$="PreviousNames"]'));

            $('#smev_request').find('.required').each(function() {
                addValidation($(this));
            });

            $('#smev_request').find("select.select2-nosearch").each(function() {
                $(this).select2({
                    dropdownParent: $("#mainModal"),
                    minimumResultsForSearch: Infinity
                });
            });
            $('#smev_request').find("select.select2").each(function() {
                $(this).select2({
                    placeholder: "ФИО",
                    tags: true,
                    minimumResultsForSearch: -1,
                    language: "ru",
                    allowClear: true,
                    showSearchBox: false
                });
            });
            $('#smev_request').find("select.select2-search").each(function() {
                $(this).select2({
                    dropdownParent: $("#mainModal")
                });
            });

            $(formContent).find('.snils').inputmask("999-999-999 99", {
                clearIncomplete: true,
                showMaskOnHover: false
            });

            $(formContent).find(".pickadate").datepicker({
                language: "ru",
                autoclose: true
            }).inputmask("99.99.9999", {
                clearIncomplete: true,
                showMaskOnHover: false
            });

        }
    };
    visibilityBlock($(formContent).find('#add-button'),true,true)
    visibilityBlock($(formContent).find('#PreviousNames'),true,true)
        $(formContent).find('#Previous').on('click', function (){
            if ($(this).is(':checked')){
                 visibilityBlock($(formContent).find('#PreviousNames'),false,false)
                 visibilityBlock($(formContent).find('#add-button'),false,false)
            }
            if ($(this).is(':not(:checked)')){
                visibilityBlock($(formContent).find('#PreviousNames'),true,true)  
                visibilityBlock($(formContent).find('#add-button'),true,true)  
            }
        })
    getServiceDocuments();
    function getServiceDocuments() {
        $.ajax({
            url: '/Cases/ServiceDocumentsJson',
            type: "POST",
            async: false,
            data: { id: $('#ServiceId').val() },
            success: function(data) {
                $('#attachmentsBlock tbody').empty();
                documentId = data[0].id;
                let k = 0;
                data.forEach(doc =>
                    doc.files.forEach(file => {
                        k++;
                        let tr = $('<tr>');
                        tr.append(`<td style="width: 5%;">${k}</td>`);
                        tr.append(`<td>${file.name}${file.extension}</td>`);
                        tr.append(`<td style="width: 10%;">${(file.size / 1024).toFixed(2)} кБ</td>`);

                        let docTypes = $('<select>');
                        docTypes.append(new Option('Выберите тип', ''));
                        docTypes.append(new Option('Заявление', '400'));
                        docTypes.append(new Option('Паспорт РФ', '401'));
                        docTypes.append(new Option('Паспорт иност. гр-на', '402'));
                        docTypes.append(new Option('Вид на жительство', '403'));
                        docTypes.append(new Option('Доверенность', '404'));
                        docTypes.append(new Option('Документ,подтв-й родство', '405'));
                        docTypes.append(new Option('Документ,подтв-й факт опеки', '406'));
                        docTypes.append(new Option('Перевод паспорта', '407'));
                        tr.append(`<td style="width: 40%;">${docTypes[0].outerHTML}</td>`);

                        let trHide = $('<tr style="display: none;">');
                        trHide.append(`<td style="width: 5%;">
                                                            <input disabled type="text" name="request.Attachments[${k - 1}].FileName" value="${file.id}">
                                                        </td>`);
                        trHide.append(`<td style="width: 5%;">
                                                            <input disabled type="text" name="request.Attachments[${k - 1}].IsFtpReference" value="true">
                                                        </td>`);
                        trHide.append(`<td style="width: 5%;">
                                                            <input disabled type="text" name="request.Attachments[${k - 1}].AttachmentTypeCode" value="">
                                                        </td>`);

                        $('#attachmentsBlock').append(tr);
                        $('#attachmentsBlock').append(trHide);
                    }));
                $('#attachmentsBlock').find("select").each(function() {
                    $(this).on('change', function(event) {
                        let trHide = event.target.closest('tr').nextSibling;
                        $(trHide).find('[name$="AttachmentTypeCode"]').val(event.target.value);
                        switch (event.target.value) {
                            case '':
                                $(trHide).removeClass('active');
                                visibilityBlock($(trHide), true, true);
                                break;
                            default:
                                $(trHide).addClass('active');
                                visibilityBlock($(trHide), true, false);
                        }
                        $('#attachmentsBlock tr.active').each(function(index) {
                            renameBlock(this, index);
                        });
                    });

                    $(this).select2({
                        dropdownParent: $("#mainModal"),
                        minimumResultsForSearch: Infinity
                    });
                });

                if (data.length == 0) $(formContent).find('#noDocuments').show();
            }
        });
    }
    function addForm(cloneListId, originalId) { //Динамическое добавление Принимает (Куда Откуда)
        let cloneList = formContent.querySelector(`#${cloneListId}`);
        let original = formContent.querySelector(`#${originalId}`);
        let cloneBlock = original.cloneNode(true);
        cloneBlock.classList.remove('d-none');
        cloneBlock.removeAttribute('disabled');
        let index = cloneList.querySelectorAll('[data-clone]').length;
        renameBlock(cloneBlock, index);
        blockInit(cloneBlock);
        cloneList.appendChild(cloneBlock);
    }

    function blockRemove(el, cloneListId) {
        el.closest('[data-clone]').remove();
        formContent.querySelectorAll(`${cloneListId} [data-clone]`).forEach((item, index) => renameBlock(item, index));
    }

    function blockInit(block) {
        visibilityBlock($(block), false, false);
        $(block).find("select.select2-nosearch").each(function() {
            $(this).select2({
                dropdownParent: $("#mainModal"),
                minimumResultsForSearch: Infinity
            });
        });

        $(block).find("select.select2-search").each(function() {
            $(this).select2({
                dropdownParent: $("#mainModal")
            });
        });

        $(block).find("select").each(function() {
            if ($(this).data('def')) {
                $(this).val($(this).data('def')).trigger('change');
            } else {
                $(this).prop("selectedIndex", 0);
            }
        });
    }

    function renameBlock(cloneBlock, indexId, initOriginal = false) {
        if (!initOriginal) {
            cloneBlock.id = `clone${indexId}`;
            cloneBlock.dataset.id = indexId;
            cloneBlock.setAttribute('data-clone', '');
        }

        cloneBlock.querySelectorAll('input').forEach(item => {
            item.id = item.id.replace(/\d+/, indexId);
            item.name = item.name.replace(/\d+/, indexId);
        });

        cloneBlock.querySelectorAll('label').forEach(item => {
            item.setAttribute('for', item.getAttribute('for').replace(/\d+/, indexId));
        });

        cloneBlock.querySelectorAll('select').forEach(item => {
            item.id ? item.id = item.id.replace(/\d+/, indexId) : void 0;
            item.name ? item.name = item.name.replace(/\d+/, indexId) : void 0;
            item.hasAttribute('data-select2-id') ? item.removeAttribute('data-select2-id') : void 0;
        });
    }

    function ShowErrorInputs() {
        for (let item of document.querySelectorAll('#smev_request input')) {
            if (item.getAttribute('disabled') == null && item.classList.contains('required') && item.value == '') {
                $('#smev_request').find(`button[data-bs-target="#${item.closest('.tab-pane').id}"]`).trigger('click');
                break;
            }
        }
    }

    $('select.applicants').each(function() {
        $(this).on('change',
            function() {
                let id = $(this).val();
                let $block = $(this).closest('[data-person]');
                $block.find('[type="text"]').each(function() {
                    $(this).val('');
                });
                if (id) {
                    $block.find('[name$="LastName"]').val(applicants[id].lastName);
                    $block.find('[name$="FirstName"]').val(applicants[id].firstName);
                    $block.find('[name$="SecondName"]').val(applicants[id].secondName);
                    $block.find('[name$="BirthDate"]').val(applicants[id].birthDate ? new Date(applicants[id].birthDate).toLocaleDateString() : '');
                    $block.find('[name$="BirthPlace"]').val(applicants[id].birthPlace);
                    $block.find('[name$="Snils"]').val(applicants[id].snils);
                    $block.find('[name$="Address"]').val(applicants[id].address);

                    switch (applicants[id].documentTypeCode) {
                        case '21':
                            $block.find('[name$="DocumentCode"]').val('01').trigger('change');
                            break;
                        case '10':
                            $block.find('[name$="DocumentCode"]').val('02').trigger('change');
                            break;
                        case '12':
                            $block.find('[name$="DocumentCode"]').val('03').trigger('change');
                            break;
                    }

                    $block.find('[name$="DocSeries"]').val(applicants[id].documentSerial.replace(' ', ''));
                    $block.find('[name$="DocNumber"]').val(applicants[id].documentNumber);
                    $block.find('[name$="DocIssueDate"]').val(applicants[id].documentIssueDate ? new Date(applicants[id].documentIssueDate).toLocaleDateString() : '');
                    $block.find('[name$="DocIssuer"]').val(applicants[id].documentIssueBody);

                    if ($block.find('[name*="Applicant"]').length > 0 &&
                        $(formContent).find('[name$="ApplicantType"]').val() == '100') {
                        $('#smev-request-tab2 select.applicants').val(id).trigger('change');
                    }
                }
            });
    });

    (function getDictionaries() {
        let dicts = new Set();
        $('[data-dictionary]').each(function() {
            let $this = $(this);
            let options = $this.data('dictionary');
            if (!dicts.has(options.dictionary)) {
                dicts.add(options.dictionary);
                $.post(`/SmevBase/SmevGetDictionary`,
                    {
                        type: options.dictionary
                    },
                    function(dictionary) {
                        fillSelect(options.dictionary, dictionary);
                    });
            }
        });
    }());

    function fillSelect(dictName, dictionary) {
        $.each($(`[data-dictionary*='"${dictName}"']`),
            function() {
                let $this = $(this);
                let items = dictionary;
                $this.empty();
                if ($this.is('[data-value-value]')) {
                    items.dictionary.forEach(function(item) {
                        $this.append(new Option(item.value, item.value));
                    });
                } else {
                    items.dictionary.forEach(function(item) {
                        $this.append(new Option(item.value, item.key));
                    });
                }

                if (items.defaultKey != null) {
                    $this.val(items.defaultKey).trigger('update');
                    $this.attr('data-def', items.defaultKey);
                } else {
                    let defVal = $this.data('dictionary').default_value;
                    if (defVal) {
                        $this.val(defVal).trigger('update');
                        $this.attr('data-def', defVal);
                    }
                }
            });
    }

    function visibilityBlock($block, hide, isDisabled) {
        switch (hide) {
            case true:
                if ($block.hasClass('accordion')) {
                    $block.find('.accordion-body').hide();
                } else {
                    $block.hide();
                }
                break;
            case false:
                if ($block.hasClass('accordion')) {
                    $block.find('.accordion-body').show();
                } else {
                    $block.show();
                }
                break;
        }

        switch (isDisabled) {
            case true:
                $block.find('input, select').each(function() {
                    if ($(this).attr('name') in SmevDataFormValidation.fields) {
                        removeValidation($(this));
                    }
                    $(this).prop('disabled', true);
                });
                break;
            case false:
                $block.find('input, select').each(function() {
                    $(this).prop('disabled', false);
                    if ($(this).hasClass('required')) {
                        addValidation($(this));
                    }
                });
                $block.find('[data-disabled]').each(function() {
                    visibilityBlock($(this), true, true);
                });
                break;
        }
    }

    function addValidation($el) {
        SmevDataFormValidation.addField($el.attr('name'),
            {
                validators: {
                    notEmpty: {}
                }
            });
        SmevDataFormValidation.elements[$el.attr('name')] = [$el[0]];
        $el.addClass('required');
    }

    function removeValidation($el) {
        if ($el.attr('name') in SmevDataFormValidation.fields) {
            SmevDataFormValidation.removeField($el.attr('name'));
        }
    }
</script>
