@using SmevRouter;
@model AisLogistics.App.ViewModels.Cases.SmevCreateResponseModel
@{
    var applicants = Model.GetApplicants();
    var semvId = Model.SmevId;
    var request = new List<GetFnsNdipsrRequestData>
            {
                new(){
                Fio = new()
               }
           };

    var request2 = new GetFnsNdfl3DohRequestData
            {
                Fio = new()
            };
}
<style>
    #smev-data-form-content .accordion-button {
        background-color: #e5edfc !important;
    }

    #smev-data-form-content li.active {
        background-color: #e5edfc !important;
        color: black !important;
    }

    #smev-data-form-content .applicants + span .select2-selection.select2-selection--single {
        background-color: #e5edfc !important;
    }
</style>

<div class="container m-0 p-0" id="smev_request">
    <div class="row justify-content-center">
        <ul class="nav nav-tabs nav-justified tabs-line mb-3" id="smev-request-tablist" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" data-bs-toggle="pill" data-bs-target="#smev-request-tab1" type="button">Запрос 1</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" data-bs-toggle="pill" data-bs-target="#smev-request-tab2" type="button">Запрос 2</button>
            </li>
        </ul>
        <div class="tab-content" id="smev-request-tab-content">
            <div class="tab-pane fade show active" id="smev-request-tab1" role="tabpanel">
                <div class="row mb-3">
                    <div class="col-12 form-check form-switch">
                        <input class="form-check-input" type="checkbox" id="request" onchange="checkboxChange(this)">
                        <label class="form-check-label fs-6 b-s-16" for="request">Предоставление сведений из налоговых деклараций, представленных индивидуальными предпринимателями, применяющими специальные налоговые режимы</label>
                    </div>
                    <div data-disabled class="col-12 row" request1>
                        <div class="col-3 border-end p-3">
                            <div class="row mb-2">
                                <div class="col-12">
                                    <button type="button" class="btn btn-primary w-100 px-0" id="addCustomer">
                                        <i class="bx bx-plus"></i>
                                        Добавить нового заявителя
                                    </button>
                                </div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-6">
                                    <button type="button" class="btn btn-success w-100 px-0" id="chooseAllCustomer">
                                        <i class="bx bx-checkbox-checked"></i>
                                        Выбрать всех
                                    </button>
                                </div>
                                <div class="col-6">
                                    <button type="button" class="btn btn-danger w-100 px-0" id="removeAllCustomer">
                                        <i class="bx bx-checkbox"></i>
                                        Убрать всех
                                    </button>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">
                                    <div class="text-center fs-5 b-s-16" for="customers">Заявители:</div>
                                    <ul class="list-group" id="customers" name="customers">
                                        @for (int i = 0; i < applicants.Count; i++)
                                        {
                                            <li class="list-group-item" data-value="@i">@applicants[i].LastName @applicants[i].FirstName @applicants[i].SecondName</li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div id="cloneList" class="col">
                            <div class="row justify-content-center g-3">
                                <div class="col-12 col-lg-8">
                                    <div class="row justify-content-center mb-3">
                                        <div class="col-4">
                                            <label class="form-label" id="labelQuery" asp-for="@request[0].ReportYear">Отчетный год</label>
                                            <input type="text" class="form-control required" asp-for="@request[0].ReportYear" value="@DateTime.Now.Year">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade show" id="smev-request-tab2" role="tabpanel">
                <div class="row justify-content-center mb-3">
                <div class="col-8" data-person>
                        <div class="col-12 form-check form-switch mb-3">
                            <input class="form-check-input" type="checkbox" id="request2" onchange="checkboxChange(this)">
                            <label class="form-check-label fs-6 b-s-16" for="request2">Сведения о доходах физических лиц из налоговой декларации формы 3-НДФЛ</label>
                        </div>
                        <div class="col mb-3">
                        <div data-disabled class="col-12">
                            <div class="row mb-3">
                                <div class="col-12">
                                    <label class="form-label">Заявители</label>
                                    <select class="form-select select2-nosearch applicants">
                                        <option value="">Выберите заявителя</option>
                                        @for (int i = 0; i < applicants.Count; i++)
                                        {
                                            <option value="@i">@applicants[i].LastName @applicants[i].FirstName @applicants[i].SecondName</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-4">
                                    <label class="form-label" asp-for="@request2.Fio.LastName">Фамилия</label>
                                    <input type="text" class="form-control required" placeholder="Фамилия" asp-for="@request2.Fio.LastName" />
                                </div>
                                <div class="col-4">
                                    <label class="form-label" asp-for="@request2.Fio.FirstName">Имя</label>
                                    <input type="text" class="form-control required" placeholder="Имя" asp-for="@request2.Fio.FirstName">
                                </div>
                                <div class="col-4">
                                    <label class="form-label" asp-for="@request2.Fio.SecondName">Отчество</label>
                                    <input type="text" class="form-control" placeholder="Отчество" asp-for="@request2.Fio.SecondName">
                                </div>
                                <div class="col-4">
                                    <label class="form-label" id="labelQuery" asp-for="@request2.Inn">ИНН</label>
                                    <input type="text" class="form-control required" asp-for="@request2.Inn">
                                </div>
                                <div class="col-4">
                                    <label class="form-label" id="labelQuery" asp-for="@request2.ReportYear">Отчетный год</label>
                                    <input type="text" class="form-control required" asp-for="@request2.ReportYear" value="@DateTime.Now.AddYears(-1).Year">
                                </div>
                            </div>
                        </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="accordion row g-3 d-none" id="original">
    <div class="accordion-header rounded p-3 mb-0 pb-0 col-12">
        <button class="fs-6 b-s-16  accordion-button collapsed" onclick="showAccordion(this)" type="button">
            Заявитель
        </button>
    </div>
    <div class="accordion-body col-12 mt-0 pt-0" data-disabled>
        <div class="row justify-content-center g-3">
            <div class="col-11">
                <div class="divider text-start">
                    <div class="divider-text b-s-16">Персональные данные</div>
                </div>
            </div>
        </div>
        <div class="row justify-content-center g-3">
            <div class="col-10">
                <div class="row mb-3">
                    <div class="col-4">
                        <label class="form-label" asp-for="@request[0].Fio.LastName">Фамилия</label>
                        <input type="text" class="form-control required" placeholder="Фамилия" asp-for="@request[0].Fio.LastName" />
                    </div>
                    <div class="col-4">
                        <label class="form-label" asp-for="@request[0].Fio.FirstName">Имя</label>
                        <input type="text" class="form-control required" placeholder="Имя" asp-for="@request[0].Fio.FirstName" />
                    </div>
                    <div class="col-4">
                        <label class="form-label" asp-for="@request[0].Fio.SecondName">Отчество</label>
                        <input type="text" class="form-control" placeholder="Отчество" asp-for="@request[0].Fio.SecondName" />
                    </div>
                    <div class="col-4">
                        <label class="form-label" asp-for="@request[0].Inn">ИНН</label>
                        <input type="text" class="form-control inn" placeholder="ИНН" asp-for="@request[0].Inn" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    var applicants = @Json.Serialize(applicants);
    var formContent = document.getElementById("smev-data-form-content");
    var smevForm = {
        init: () => {
            $(formContent).find('.required').each(function () {
                addValidation($(this));
            });

            let options = { clearIncomplete: true, showMaskOnHover: false }
            
            $(formContent).find('[name$="Inn"]').inputmask("9{12}", options);
            $(formContent).find('[name$="ReportYear"]').inputmask("9{4}", options);

            $(formContent).find('[data-disabled]').each(function () {
                visibilityBlock($(this), true);
            });
            $(formContent).find('[data-disabled]').each(function () {
                visibilityBlock($(this), true, true);
            });

            var semvId = @semvId;
            if (semvId==336) {
                document.getElementById("request").click();
                $('#smev_request').find('[data-bs-target="#smev-request-tab1"]').trigger('click');
                visibilityBlock($("#clone0").find('.accordion-body'), false, false);
            }
            if (semvId==338) {
                $('#smev_request').find('[data-bs-target="#smev-request-tab2"]').trigger('click');
                document.getElementById("request2").click();
            }  

            $(formContent).find("select.select2-nosearch").select2({
                dropdownParent: $("#mainModal"),
                minimumResultsForSearch: Infinity
            });

            blockClear(formContent.querySelector('#original'));
            renameBlock(formContent.querySelector('#original'), 100, true);

        }
    };

    function blockClear(block) {
        block.querySelectorAll('input').forEach(i => i.value = '');
    }

    function addValidation($el) {
        SmevDataFormValidation.addField($el.attr('name'),
            {
                validators: {
                    notEmpty: {}
                }
            });
        SmevDataFormValidation.elements[$el.attr('name')] = [$el[0]];
        $el.addClass('required');
    }

    function removeValidation($el) {
        if ($el.attr('name') in SmevDataFormValidation.fields) {
            SmevDataFormValidation.removeField($el.attr('name'));
        }
    }

    $('select.applicants').each(function () {
        $(this).on('change',
            function () {
                let id = $(this).val();
                let $block = $(this).closest('[data-person]');
                $block.find('[type="text"]').not('[name$="ReportYear"]').each(function () {
                    $(this).val('');
                });
                if (id) {
                    $block.find('[name$=".LastName"]').val(applicants[id].lastName);
                    $block.find('[name$=".FirstName"]').val(applicants[id].firstName);
                    $block.find('[name$=".SecondName"]').val(applicants[id].secondName);
                    $block.find('[name$="Inn"]').val(applicants[id].inn);
                }
            });
    });

    function checkboxChange(el) {
        visibilityBlock($(el).closest('.row').find('[data-disabled]'), !$(el).prop('checked'), !$(el).prop('checked'));
    }
    function visibilityBlock($block, hide) {
        if (hide) {
            $block.hide();
            //$block.find('input, select').each(function() {
            //    if ($(this).attr('name') in SmevDataFormValidation.fields) {
            //        SmevDataFormValidation.removeField($(this).attr('name'));
            //    }
            //    if (isDisabled) $(this).prop('disabled', true);
            //});
        } else {
            $block.show();
            $block.find('input, select').each(function () {
                //$(this).prop('disabled', false);
                let $this = $(this);
                if ($this.hasClass('required')) {
                    SmevDataFormValidation.addField($this.attr('name'),
                        {
                            validators: {
                                notEmpty: {}
                            }
                        });
                    SmevDataFormValidation.elements[$this.attr('name')] = [$this[0]];
                }
            });

            $block.find('[data-disabled]').each(function () {
                visibilityBlock($(this), true);
            });
        }
    }

    document.getElementById('customers').addEventListener('click',
        (event) => {
            let li = event.target;
            if (li.classList.contains('active')) {
                li.classList.remove('active');
                let $block = $(formContent.querySelector(`#cloneList [data-customer-id="${li.dataset.value}"]`));
                $block.find('input, select').each(function () {
                    if ($(this).attr('name') in SmevDataFormValidation.fields) {
                        SmevDataFormValidation.removeField($(this).attr('name'));
                    }
                });
                $block.remove();
                formContent.querySelectorAll('#cloneList [data-clone]').forEach((item, index) => {
                    renameBlock(item, index);
                });
            } else {
                li.classList.add('active');
                addForm('cloneList', 'original', li.dataset.value);
                if (li.textContent.includes('Заявитель')) {
                    fillForm();
                } else {
                    fillForm(li.dataset.value);
                }
            }
        });

    document.getElementById('addCustomer').addEventListener('click', () => {
        let index = ++document.querySelectorAll('#customers li').length;
        $('#customers').append(`<li class="list-group-item" data-value="${index}">Заявитель ${index}</li>`);
    });

    document.getElementById('chooseAllCustomer').addEventListener('click', () => {
        document.querySelectorAll('#customers li:not(.active)').forEach(item => {
            item.click();
        });
    });

    document.getElementById('removeAllCustomer').addEventListener('click', () => {
        document.querySelectorAll('#customers li.active').forEach(item => {
            item.click();
        });
    });

    //Показывает первого заявителя
    $("#customers").find('[data-value="0"]').click();
    $("#clone0").find('button').removeClass('collapsed');

    function fillForm(customerId) {
        if (customerId) {
            let form = formContent.querySelector(`[data-customer-id="${customerId}"]`);
            $(form).find('button').text(`${applicants[customerId].lastName} ${applicants[customerId].firstName} ${applicants[customerId].secondName}`);
            $(form).find('[name$="LastName"]').val(applicants[customerId].lastName);
            $(form).find('[name$="FirstName"]').val(applicants[customerId].firstName);
            $(form).find('[name$="SecondName"]').val(applicants[customerId].secondName);
            $(form).find('[name$="Inn"]').val(applicants[customerId].inn);
        }
    }

    function renameBlock(cloneBlock, indexId, initOriginal = false) {
        if (!initOriginal) {
            cloneBlock.id = `clone${indexId}`;
            cloneBlock.dataset.id = indexId;
            cloneBlock.setAttribute('data-clone', '');
        }

        cloneBlock.querySelectorAll('input').forEach(item => {
            item.id = item.id.replace(/\d+/, indexId);
            item.name = item.name.replace(/\d+/, indexId);
        });

        cloneBlock.querySelectorAll('label').forEach(item => {
            item.setAttribute('for', item.getAttribute('for').replace(/\d+/, indexId));
        });

        cloneBlock.querySelectorAll('select').forEach(item => {
            item.id ? item.id = item.id.replace(/\d+/, indexId) : void 0;
            item.name ? item.name = item.name.replace(/\d+/, indexId) : void 0;
            item.hasAttribute('data-select2-id') ? item.removeAttribute('data-select2-id') : void 0;
        });
    }

    function addForm(cloneListId, originalId, customerId) { //Динамическое добавление Принимает (Куда Откуда)
        let cloneList = formContent.querySelector(`#${cloneListId}`);
        let original = formContent.querySelector(`#${originalId}`);
        let cloneBlock = original.cloneNode(true);
        cloneBlock.classList.remove('d-none');
        let indexId = cloneList.querySelectorAll('[data-clone]').length;
        cloneBlock.setAttribute('data-customer-id', customerId);
        renameBlock(cloneBlock, indexId);
        blockInit(cloneBlock);
        cloneList.appendChild(cloneBlock);
    }

    function showAccordion() {
        let accordionBody = $(event.target).closest('.accordion').find('.accordion-body');
        if ($(event.target).hasClass('collapsed')) {
            visibilityBlock(accordionBody, false);
        } else {
            visibilityBlock(accordionBody, true);
        }
        $(event.target).toggleClass('collapsed');
    };

    function blockInit(block) {
        visibilityBlock($(block), false);

        $(block).find("select.select2-nosearch").each(function () {
            $(this).select2({
                dropdownParent: $("#mainModal"),
                minimumResultsForSearch: Infinity
            });
        });
        var options = { clearIncomplete: true, showMaskOnHover: false };
        $(block).find('[name$="Inn"]').inputmask("9{12}", options);
        $(block).find('[name$="ReportYear"]').inputmask("9{4}", options);
        $(block).find("select").each(function () {
            if ($(this).data('def')) {
                $(this).val($(this).data('def')).trigger('change');
            } else {
                $(this).prop("selectedIndex", 0);
            }
        });
        $(block).find('[data-disabled]').each(function () {
            visibilityBlock($(this), true, true);
        });
        /* init datepicker */
        $(block).find(".pickdate").datepicker({
            language: "ru",
            autoclose: true
        });
    }

    function visibilityBlock($block, hide, isDisabled = false) {
        if (hide) {
            $block.hide();
            $block.find('input, select').each(function () {
                if ($(this).attr('name') in SmevDataFormValidation.fields) {
                    SmevDataFormValidation.removeField($(this).attr('name'));
                }
                if (isDisabled) $(this).prop('disabled', true);
            });
        } else {
            $block.show();
            $block.find('input, select').each(function () {
                $(this).prop('disabled', false);
                let $this = $(this);
                if ($this.hasClass('required')) {
                    SmevDataFormValidation.addField($this.attr('name'),
                        {
                            validators: {
                                notEmpty: {}
                            }
                        });
                    SmevDataFormValidation.elements[$this.attr('name')] = [$this[0]];
                }
            });

            $block.find('[data-disabled]').each(function () {
                visibilityBlock($(this), true, true);
            });
        }
    }
    function ShowErrorInputs() {
        for (let item of document.querySelectorAll('#smev_request input,select')) {
            if (item.getAttribute('disabled') == null && item.classList.contains('required') && item.value == '') {
                $('#smev_request').find(`button[data-bs-target="#${item.closest('.tab-pane').id}"]`).trigger('click');
                break;
            }
        };
    }
</script>
