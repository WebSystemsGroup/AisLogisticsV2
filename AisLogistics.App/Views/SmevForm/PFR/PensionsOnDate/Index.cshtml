@using SmevRouter
@model AisLogistics.App.ViewModels.Cases.SmevCreateResponseModel
@{
    var applicants = Model.GetApplicants();
    var request = new GetBenefitsDateRequestData
            {
                Fio = new FioType(),
                AppDate = DateTime.Now
            };
}

<style>

    #smev-data-form-content .applicants + span .select2-selection.select2-selection--single {
        background-color: #e5edfc !important;
    }

    #smev-request-tabContent .tab-pane {
        height: 550px;
    }
</style>

<div class="row g-3">
    <div class="col-4 mx-auto">
        <label class="form-label" asp-for="@request.AppDate">Дата, на которую запрашиваются сведения</label>
        <div class="input-group input-group-merge">
            <span class="input-group-text"><i class="bi bi-calendar3"></i></span>
            <input asp-for="@request.AppDate" type="text" class="form-control pickadate" placeholder="Дата">
        </div>
    </div>
</div>
<div class="row g-3">
    <div class="col-12 col-lg-10 mx-auto">
        <div class="divider text-start">
            <div class="divider-text fs-5 b-s-16">Персональные данные</div>
        </div>
    </div>
</div>
<div class="row g-3">
    <div class="col-12 col-lg-8 mx-auto" data-person>
        <div class="row mb-1">
            <div class="col-12">
                <label class="form-label">Заявители</label>
                <select class="form-select select2-nosearch applicants">
                    <option value="">Выберите заявителя</option>
                    @for (int i = 0; i < applicants.Count; i++)
                    {
                        <option value="@i">@applicants[i].LastName @applicants[i].FirstName @applicants[i].SecondName</option>
                    }
                </select>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-4">
                <label class="form-label" asp-for="@request.Fio.LastName">Фамилия</label>
                <input type="text" class="form-control" placeholder="Фамилия" asp-for="@request.Fio.LastName" />
            </div>
            <div class="col-4">
                <label class="form-label" asp-for="@request.Fio.FirstName">Имя</label>
                <input type="text" class="form-control" placeholder="Имя" asp-for="@request.Fio.FirstName">
            </div>
            <div class="col-4">
                <label class="form-label" asp-for="@request.Fio.SecondName">Отчество</label>
                <input type="text" class="form-control" placeholder="Отчество" asp-for="@request.Fio.SecondName">
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-4">
                <label class="form-label" asp-for="@request.BirthDate">Дата рождения</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bi bi-calendar3"></i></span>
                    <input asp-for="@request.BirthDate" type="text" class="form-control pickadate" placeholder="Дата рождения" value="">
                </div>
            </div>
            <div class="col-4">
                <label class="d-block form-label">Пол</label>
                <div class="form-check form-check-inline mx-0">
                    <input class="form-check-input" type="radio" asp-for="@request.Gender" id="smevModel_Gender1" value="Male" checked="checked">
                    <label class="form-check-label" for="smevModel_Gender1"><i class="bi bi-gender-male fs-6"></i> Мужской</label>
                </div>
                <div class="form-check form-check-inline mx-1">
                    <input class="form-check-input" type="radio" asp-for="@request.Gender" id="smevModel_Gender2" value="Female">
                    <label class="form-check-label" for="smevModel_Gender2"><i class="bi bi-gender-female fs-6"></i>Женский</label>
                </div>
            </div>
            <div class="col-4">
                <label class="form-label" asp-for="@request.Snils">СНИЛС</label>
                <input type="text" class="form-control" placeholder="СНИЛС" asp-for="@request.Snils">
            </div>
        </div>        
    </div>
</div>

<script>
    function ShowErrorInputs() {
    }

    var applicants = @Json.Serialize(applicants);
    var formContent = document.getElementById("smev-data-form-content"),
        smevForm = {
            fields: {
                lastName: formContent.querySelector("#request_Fio_LastName"),
                firstName: formContent.querySelector("#request_Fio_FirstName"),
                secondName: formContent.querySelector("#request_Fio_SecondName"),
                snils: formContent.querySelector("#request_Snils"),
                birthDate: formContent.querySelector("#request_BirthDate"),
                appDate: formContent.querySelector("#request_AppDate")
            },
            init: () => {
                /* init validation */
                SmevDataFormValidation.addField(smevForm.fields.lastName.getAttribute('name'), {
                    validators: {
                        notEmpty: {}
                    }
                }).addField(smevForm.fields.firstName.getAttribute('name'), {
                    validators: {
                        notEmpty: {}
                    }
                }).addField(smevForm.fields.snils.getAttribute('name'), {
                    validators: {
                        notEmpty: {}
                    }
                }).addField(smevForm.fields.birthDate.getAttribute('name'), {
                    validators: {
                        notEmpty: {}
                    }
                }).addField(smevForm.fields.appDate.getAttribute('name'), {
                    validators: {
                        notEmpty: {}
                    }
                });

                /* init datepicker */
                $(".pickadate").datepicker({
                    language: "ru",
                    autoclose: true
                });

                /* init inputmask */
                $(".pickadate").inputmask("99.99.9999", {
                    clearIncomplete: true,
                    showMaskOnHover: false
                });
                $(smevForm.fields.snils).inputmask("999-999-999 99", {
                    clearIncomplete: true,
                    showMaskOnHover: false
                });
            }
        };

    select2Init($(formContent));

    $('select.applicants').each(function () {
        $(this).on('change',
            function () {
                let id = $(this).val();
                let $block = $(this).closest('[data-person]');
                $block.find('[type="text"]').each(function () {
                    $(this).val('');
                });
                if (id) {
                    $block.find('[name$="LastName"]').val(applicants[id].lastName);
                    $block.find('[name$="FirstName"]').val(applicants[id].firstName);
                    $block.find('[name$="SecondName"]').val(applicants[id].secondName);
                    $block.find('[name$="BirthDate"]').val(applicants[id].birthDate ? new Date(applicants[id].birthDate).toLocaleDateString() : '');
                    $block.find('[name$="Snils"]').val(applicants[id].snils);

                    switch (applicants[id].gender) {
                        case 1:
                            $block.find('[id$="Gender1"]').prop('checked', true);
                            break;
                        case 2:
                            $block.find('[id$="Gender2"]').prop('checked', true);
                            break;
                    }
                }
            });
    });
</script>