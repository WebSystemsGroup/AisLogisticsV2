@using SmevRouter
@model AisLogistics.App.ViewModels.Cases.SmevCreateResponseModel
@{
    var applicants = Model.GetApplicants();
    var request = new List<GetIpExistInteractiveRequestData>
    {
        new()
        {
            DebtorFlData = new FsspDebtorFlData
            {
                Fio=new()
            },
            DebtorUlData = new FsspDebtorUlData
            {
                DirectorFio = new FioType()
            }
        }
    };
}
<style>
    #smev-data-form-content .accordion-button {
        background-color: #e5edfc !important;
    }

    #smev-data-form-content li.active {
        background-color: #e5edfc !important;
        color: black !important;
    }
</style>

<div class="container m-0 p-0" id="smev_request">
    <div class="row justify-content-center">
        <div class="col-3 border-end p-3">
            <div class="row mb-2">
                <div class="col-12">
                    <button type="button" class="btn btn-primary w-100 px-0" id="addCustomer">
                        <i class="bi bi-plus"></i>
                        Добавить нового заявителя
                    </button>
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-6">
                    <button type="button" class="btn btn-success w-100 px-0" id="chooseAllCustomer">
                        <i class="bi bi-check2-square"></i>
                        Выбрать всех
                    </button>
                </div>
                <div class="col-6">
                    <button type="button" class="btn btn-danger w-100 px-0" id="removeAllCustomer">
                        <i class="bi bi-square"></i>
                        Убрать всех
                    </button>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="text-center fs-5 b-s-16" for="customers">Заявители:</div>
                    <ul class="list-group" id="customers" name="customers">
                        @for (int i = 0; i < applicants.Count; i++)
                        {
                            <li class="list-group-item" data-value="@i">@applicants[i].LastName @applicants[i].FirstName @applicants[i].SecondName</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div id="cloneList" class="col">
        </div>
    </div>
</div>

<div class="accordion row g-3 d-none" id="original">
    <div class="accordion-header rounded p-3 mb-0 pb-0 col-12">
        <button class="fs-6 b-s-16  accordion-button collapsed" onclick="showAccordion(this)" type="button">
            Заявитель
        </button>
    </div>
    <div class="accordion-body col-12 mt-0 pt-0" data-disabled>
        <div class="row justify-content-center g-3">
            <div class="col-11">
                <div class="divider text-start">
                    <div class="divider-text b-s-16">Персональные данные</div>
                </div>
            </div>
        </div>
        <div class="row justify-content-center g-3">
            <div class="col-10">
                <div class="row mb-3">
                    <div class="col-6">
                        <label class="form-label" asp-for="@request[0].ContragentType">Тип заявителя</label>
                        <select class="select2-search required" asp-for="@request[0].ContragentType" onchange="contragentTypeChange(this)">
                            <option value="Fl">Физическое лицо</option>
                            <option value="Ul">Юридическое лицо</option>
                        </select>
                    </div>
                </div>
                <div class="row mb-3" data-fl>
                    <div class="col-4">
                        <label class="form-label" asp-for="@request[0].DebtorFlData.Fio.LastName">Фамилия</label>
                        <input type="text" class="form-control required" placeholder="Фамилия" asp-for="@request[0].DebtorFlData.Fio.LastName" />
                    </div>
                    <div class="col-4">
                        <label class="form-label" asp-for="@request[0].DebtorFlData.Fio.FirstName">Имя</label>
                        <input type="text" class="form-control required" placeholder="Имя" asp-for="@request[0].DebtorFlData.Fio.FirstName" />
                    </div>
                    <div class="col-4">
                        <label class="form-label" asp-for="@request[0].DebtorFlData.Fio.SecondName">Отчество</label>
                        <input type="text" class="form-control" placeholder="Отчество" asp-for="@request[0].DebtorFlData.Fio.SecondName" />
                    </div>
                    <div class="col-3">
                        <label class="form-label" asp-for="@request[0].DebtorFlData.BirthDate">Дата рождения</label>
                        <div class="input-group input-group-merge">
                            <span class="input-group-text"><i class="bi bi-calendar3"></i></span>
                            <input asp-for="@request[0].DebtorFlData.BirthDate" type="text" class="form-control pickadate required" placeholder="Дата рождения" />
                        </div>
                    </div>
                    <div class="col-6">
                        <label class="d-block form-label mb-3">Пол</label>
                        <div class="form-check form-check-inline mx-0 w-50">
                            <input class="form-check-input" type="radio" asp-for="@request[0].DebtorFlData.Gender" id="smevModel1_Gender1" value="Male" checked="checked">
                            <label class="form-check-label" for="smevModel1_Gender1"><i class="bi bi-gender-male fs-6"></i>Мужской</label>
                        </div>
                        <div class="form-check form-check-inline mx-0">
                            <input class="form-check-input" type="radio" asp-for="@request[0].DebtorFlData.Gender" id="smevModel1_Gender2" value="Female">
                            <label class="form-check-label" for="smevModel1_Gender2"><i class="bi bi-gender-female fs-6"></i>Женский</label>
                        </div>
                    </div>
                    <div class="col-3">
                        <label class="form-label" asp-for="@request[0].DebtorFlData.Snils">СНИЛС</label>
                        <input type="text" class="form-control" placeholder="СНИЛС" asp-for="@request[0].DebtorFlData.Snils" />
                    </div>
                </div>
                <div data-ul data-disabled>
                    <div class="row justify-content-center">
                        <div class="col-12 mx-auto">
                            <div class="fs-5 b-s-16">Данные директора организации</div>
                        </div>
                        <div class="col-10">
                            <div class="row mb-3">
                                <div class="col-4">
                                    <label class="form-label" asp-for="@request[0].DebtorUlData.DirectorFio.LastName">Фамилия</label>
                                    <input type="text" class="form-control required" placeholder="Фамилия" asp-for="@request[0].DebtorUlData.DirectorFio.LastName" />
                                </div>
                                <div class="col-4">
                                    <label class="form-label" asp-for="@request[0].DebtorUlData.DirectorFio.FirstName">Имя</label>
                                    <input type="text" class="form-control required" placeholder="Имя" asp-for="@request[0].DebtorUlData.DirectorFio.FirstName" />
                                </div>
                                <div class="col-4">
                                    <label class="form-label" asp-for="@request[0].DebtorUlData.DirectorFio.SecondName">Отчество</label>
                                    <input type="text" class="form-control" placeholder="Отчество" asp-for="@request[0].DebtorUlData.DirectorFio.SecondName" />
                                </div>
                                <div class="col-6">
                                    <label class="d-block form-label mb-3">Пол</label>
                                    <div class="form-check form-check-inline mx-0 w-50">
                                        <input class="form-check-input" type="radio" asp-for="@request[0].DebtorUlData.DirectorGender" id="smevModel2_Gender1" value="Male" checked="checked">
                                        <label class="form-check-label" for="smevModel2_Gender1"><i class="bi bi-gender-male fs-6"></i>Мужской</label>
                                    </div>
                                    <div class="form-check form-check-inline mx-0">
                                        <input class="form-check-input" type="radio" asp-for="@request[0].DebtorUlData.DirectorGender" id="smevModel2_Gender2" value="Female">
                                        <label class="form-check-label" for="smevModel2_Gender2"><i class="bi bi-gender-female fs-6"></i>Женский</label>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <label class="form-label" asp-for="@request[0].DebtorUlData.DirectorSnils">СНИЛС</label>
                                    <input type="text" class="form-control required" placeholder="СНИЛС" asp-for="@request[0].DebtorUlData.DirectorSnils" />
                                </div>
                                <div class="col-6">
                                    <label class="form-label" asp-for="@request[0].DebtorUlData.TrusteeDocNumber">Номер документа о назначении</label>
                                    <input type="text" class="form-control required" placeholder="Номер документа о назначении" asp-for="@request[0].DebtorUlData.TrusteeDocNumber" />
                                </div>
                                <div class="col-6">
                                    <label class="form-label" asp-for="@request[0].DebtorUlData.TrusteeDocDate">Дата документа о назначении</label>
                                    <div class="input-group input-group-merge">
                                        <span class="input-group-text"><i class="bi bi-calendar3"></i></span>
                                        <input asp-for="@request[0].DebtorUlData.TrusteeDocDate" type="text" class="form-control pickadate required" placeholder="Дата" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row justify-content-center">
                        <div class="col-12 mx-auto">
                            <div class="fs-5 b-s-16">Данные организации</div>
                        </div>
                        <div class="col-10">
                            <div class="row mb-3">
                                <div class="col-4">
                                    <label class="form-label" asp-for="@request[0].DebtorUlData.DirectorFio.LastName">Наименование</label>
                                    <input type="text" class="form-control required" placeholder="Наименование" asp-for="@request[0].DebtorUlData.LegalName" />
                                </div>
                                <div class="col-4">
                                    <label class="form-label" asp-for="@request[0].DebtorUlData.LegalInn">ИНН</label>
                                    <input type="text" class="form-control required" placeholder="ИНН" asp-for="@request[0].DebtorUlData.LegalInn" />
                                </div>
                                <div class="col-4">
                                    <label class="form-label" asp-for="@request[0].DebtorUlData.LegalOgrn">ОГРН</label>
                                    <input type="text" class="form-control required" placeholder="ОГРН" asp-for="@request[0].DebtorUlData.LegalOgrn" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="row justify-content-center">
                    <div class="col-12 mx-auto">
                        <div class="fs-5 b-s-16">Контактные данные</div>
                    </div>
                    <div class="col-10">
                        <div class="row mb-3">
                            <div class="col-4">
                                <label class="form-label" asp-for="@request[0].Tel1">Номер телефона 1</label>
                                <input type="text" class="form-control" placeholder="Номер телефона 1" asp-for="@request[0].Tel1" />
                            </div>
                            <div class="col-4">
                                <label class="form-label" asp-for="@request[0].Tel2">Номер телефона 2</label>
                                <input type="text" class="form-control" placeholder="Номер телефона 2" asp-for="@request[0].Tel2" />
                            </div>
                            <div class="col-4">
                                <label class="form-label" asp-for="@request[0].Email">E-mail</label>
                                <input type="text" class="form-control" placeholder="E-mail" asp-for="@request[0].Email" />
                            </div>
                            <div class="col-12">
                                <label class="form-label" asp-for="@request[0].Address">Адрес</label>
                                <input type="text" class="form-control" placeholder="Адрес" asp-for="@request[0].Address" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        var applicants = @Json.Serialize(applicants);
        var formContent = document.getElementById("smev-data-form-content");
        var smevForm = {
            init: () => {
                $(formContent).find('[data-disabled]').each(function() {
                    visibilityBlock($(this), true, true);
                });

                blockClear(formContent.querySelector('#original'));
                renameBlock(formContent.querySelector('#original'), 100, true);
            }
        };

        function blockClear(block) {
            block.querySelectorAll('input').forEach(i => i.value = '');
        }

        function ShowErrorInputs() {
            let blocks = new Set();
            document.querySelectorAll('#smev_request input').forEach(item => {
                if (item.getAttribute('disabled') == null && item.classList.contains('required') && item.value == '') {
                    let but = item.closest('[data-clone]').querySelector('button');
                    if (but) blocks.add(but);
                }
            });
            blocks.forEach(item => {
                if (item.classList.contains('collapsed')) item.click();
            });
        }

        function visibilityBlock($block, hide, isDisabled) {
            switch (hide) {
                case true:
                    if ($block.hasClass('accordion')) {
                        $block.find('.accordion-body').hide();
                    } else {
                        $block.hide();
                    }
                    break;
                case false:
                    if ($block.hasClass('accordion')) {
                        $block.find('.accordion-body').show();
                    } else {
                        $block.removeClass('d-none')
                        $block.show();
                    }
                    break;
            }

            switch (isDisabled) {
                case true:
                    $block.find('input, select').each(function() {
                        if ($(this).attr('name') in SmevDataFormValidation.fields) {
                            removeValidation($(this));
                        }
                        $(this).prop('disabled', true);
                    });
                    break;
                case false:
                    $block.find('input, select').each(function() {
                        $(this).prop('disabled', false);
                        if ($(this).hasClass('required')) {
                            addValidation($(this));
                        }
                    });
                    $block.find('[data-disabled]').each(function() {
                        visibilityBlock($(this), true, true);
                    });
                    break;
            }
        }

        function addValidation($el) {
            SmevDataFormValidation.addField($el.attr('name'),
                {
                    validators: {
                        notEmpty: {}
                    }
                });
            SmevDataFormValidation.elements[$el.attr('name')] = [$el[0]];
            $el.addClass('required');
        }

        function removeValidation($el) {
            if ($el.attr('name') in SmevDataFormValidation.fields) {
                SmevDataFormValidation.removeField($el.attr('name'));
            }
        }

        (function getDictionaries() {
            let dicts = new Set();
            $('[data-dictionary]').each(function() {
                let $this = $(this);
                let options = $this.data('dictionary');
                if (!dicts.has(options.dictionary)) {
                    dicts.add(options.dictionary);
                    $.post(`/SmevBase/SmevGetDictionary`,
                        {
                            type: options.dictionary
                        },
                        function(dictionary) {
                            fillSelect(options.dictionary, dictionary);
                        });
                }
            });
        }());

        function fillSelect(dictName, dictionary) {
            $.each($(`[data-dictionary*='"${dictName}"']`),
                function() {
                    let $this = $(this);
                    let items = dictionary;
                    $this.empty();
                    if ($this.is('[data-value-value]')) {
                        items.dictionary.forEach(function(item) {
                            $this.append(new Option(item.value, item.value));
                        });
                    } else {
                        items.dictionary.forEach(function(item) {
                            $this.append(new Option(item.value, item.key));
                        });
                    }

                    if (items.defaultKey != null) {
                        $this.val(items.defaultKey).trigger('update');
                        $this.attr('data-def', items.defaultKey);
                    } else {
                        let defVal = $this.data('dictionary').default_value;
                        if (defVal) {
                            $this.val(defVal).trigger('update');
                            $this.attr('data-def', defVal);
                        }
                    }
                });
        }

        document.getElementById('customers').addEventListener('click',
            (event) => {
                let li = event.target;
                if (li.classList.contains('active')) {
                    li.classList.remove('active');
                    let $block = $(formContent.querySelector(`#cloneList [data-customer-id="${li.dataset.value}"]`));
                    $block.find('input, select').each(function() {
                        if ($(this).attr('name') in SmevDataFormValidation.fields) {
                            SmevDataFormValidation.removeField($(this).attr('name'));
                        }
                    });
                    $block.remove();
                    formContent.querySelectorAll('#cloneList [data-clone]').forEach((item, index) => {
                        renameBlock(item, index);
                    });
                } else {
                    li.classList.add('active');
                    addForm('cloneList', 'original', li.dataset.value);
                    if (li.textContent.includes('Заявитель')) {
                        fillForm();
                    } else {
                        fillForm(li.dataset.value);
                    }
                }
            });

        document.getElementById('addCustomer').addEventListener('click', () => {
            let index = ++document.querySelectorAll('#customers li').length;
            $('#customers').append(`<li class="list-group-item" data-value="${index}">Заявитель ${index}</li>`);
        });

        document.getElementById('chooseAllCustomer').addEventListener('click', () => {
            document.querySelectorAll('#customers li:not(.active)').forEach(item => {
                item.click();
            });
        });

        document.getElementById('removeAllCustomer').addEventListener('click', () => {
            document.querySelectorAll('#customers li.active').forEach(item => {
                item.click();
            });
        });

        function fillForm(customerId) {
            if (customerId) {
                let form = formContent.querySelector(`[data-customer-id="${customerId}"]`);
                $(form).find('button').text(`${applicants[customerId].lastName} ${applicants[customerId].firstName} ${applicants[customerId].secondName}`);
                $(form).find('[name$="LastName"]').val(applicants[customerId].lastName);
                $(form).find('[name$="FirstName"]').val(applicants[customerId].firstName);
                $(form).find('[name$="SecondName"]').val(applicants[customerId].secondName);
                $(form).find('[name$="Snils"]').val(applicants[customerId].snils);
                $(form).find('[name$="BirthPlace"]').val(applicants[customerId].birthPlace);
                $(form).find('[name$="BirthDate"]').val(applicants[customerId].birthDate ? new Date(applicants[customerId].birthDate).toLocaleDateString() : '');

                $(form).find('[name$="DocumentType"]').val(applicants[customerId].documentTypeCode.padStart(2, '0')).trigger('change');
                $(form).find('[name$="DocumentSeriesNumber"]').val(`${applicants[customerId].documentSerial} ${applicants[customerId].documentNumber}`);
                $(form).find('[name$="DocumentDate"]').val(applicants[customerId].documentIssueDate ? new Date(applicants[customerId].documentIssueDate).toLocaleDateString() : '');
                $(form).find('[name$="DocumentIssuer"]').val(applicants[customerId].documentIssueBody);
                $(form).find('[name$="DocumentIssuerCode"]').val(applicants[customerId].documentCode);
            }
        }

        function renameBlock(cloneBlock, indexId, initOriginal = false) {
            if (!initOriginal) {
                cloneBlock.id = `clone${indexId}`;
                cloneBlock.dataset.id = indexId;
                cloneBlock.setAttribute('data-clone', '');
            }

            cloneBlock.querySelectorAll('input').forEach(item => {
                item.id = item.id.replace(/\d+/, indexId);
                item.name = item.name.replace(/\d+/, indexId);
            });

            cloneBlock.querySelectorAll('label').forEach(item => {
                if (item.getAttribute('for')) {
                    item.setAttribute('for', item.getAttribute('for').replace(/\d+/, indexId));
                }
            });

            cloneBlock.querySelectorAll('select').forEach(item => {
                item.id ? item.id = item.id.replace(/\d+/, indexId) : void 0;
                item.name ? item.name = item.name.replace(/\d+/, indexId) : void 0;
                item.hasAttribute('data-select2-id') ? item.removeAttribute('data-select2-id') : void 0;
            });
        }

        function addForm(cloneListId, originalId, customerId) { //Динамическое добавление Принимает (Куда Откуда)
            let cloneList = formContent.querySelector(`#${cloneListId}`);
            let original = formContent.querySelector(`#${originalId}`);
            let cloneBlock = original.cloneNode(true);
            cloneBlock.classList.remove('d-none');
            let indexId = cloneList.querySelectorAll('[data-clone]').length;
            cloneBlock.setAttribute('data-customer-id', customerId);
            renameBlock(cloneBlock, indexId);
            blockInit(cloneBlock);
            cloneList.appendChild(cloneBlock);
        }

        function contragentTypeChange(el) {
            let $clone = $(el).closest('[data-clone]');
            let $ul = $clone.find('[data-ul]');
            let $fl = $clone.find('[data-fl]');

            visibilityBlock($ul, true, true);
            visibilityBlock($fl, true, true);

            switch (el.value) {
                case 'Fl':
                    visibilityBlock($fl, false, false);
                    break;
                case 'Ul':
                    visibilityBlock($ul, false, false);
                    break;
            }
        }

        function showAccordion() {
            let accordionBody = $(event.target).closest('.accordion').find('.accordion-body');
            if ($(event.target).hasClass('collapsed')) {
                visibilityBlock(accordionBody, false, false);
            } else {
                visibilityBlock(accordionBody, true, false);
            }
            $(event.target).toggleClass('collapsed');
        };

        function blockInit(block) {
            visibilityBlock($(block), false, false);

            $(block).find("select.select2-nosearch").each(function() {
                $(this).select2({
                    minimumResultsForSearch: Infinity
                });
            });
            $(block).find("select.select2-search").each(function() {
                $(this).select2({
                    dropdownParent: $("#mainModal")
                });
            });

            /* init datepicker */
            $(block).find(".pickadate").datepicker({
                language: "ru",
                autoclose: true
            });

            var maskOptions = { clearIncomplete: true, showMaskOnHover: false };

            /* init inputmask */
            $(block).find(".pickadate").inputmask("99.99.9999", maskOptions);
            $(block).find('[name$="Snils"]').inputmask("999-999-999 99", maskOptions);
            $(block).find('[name$="LegalInn"]').inputmask("9{10}", maskOptions);
            $(block).find('[name$="LegalOgrn"]').inputmask("9{13}", maskOptions);
        }

    </script>
