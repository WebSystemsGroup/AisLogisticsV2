@using SmevRouter

@model AisLogistics.App.ViewModels.Cases.SmevCreateResponseModel
@{
    var applicants = Model.GetApplicants();
    var request = new NbpRefuseBioStatusRequestData();
    var fio = new FioType();
}

<style>
    #smev-data-form-content .applicants + span .select2-selection.select2-selection--single {
        background-color: #e5edfc !important;
    }

    #smev-request-tabContent .tab-pane {
        height: 550px;
    }
</style>

<div class="row justify-content-center" id="smev_request">
    <div class="col-10">
        <ul class="nav nav-tabs nav-justified tabs-line mb-3" id="smev-request-tablist" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" data-bs-toggle="pill" data-bs-target="#smev-request-tab1" type="button">Данные запроса</button>
            </li>
        </ul>
        <div class="tab-content" id="smev-request-tabContent">
            <div class="tab-pane fade show active" id="smev-request-tab1" role="tabpanel">
                <div class="row g-3">
                    <div class="col-12 mx-auto">
                        <div class="divider text-start">
                            <div class="divider-text fs-5 b-s-16">Персональные данные заявителя</div>
                        </div>
                    </div>
                </div>
                <div class="row justify-content-center" data-person>
                    <div class="col-10">
                        <div class="row mb-1">
                            <div class="col-12">
                                <label class="form-label">Заявители</label>
                                <select class="form-select select2-nosearch applicants">
                                    <option value="">Выберите заявителя</option>
                                    @for (int i = 0; i < applicants.Count; i++)
                                    {
                                        <option value="@i">@applicants[i].LastName @applicants[i].FirstName @applicants[i].SecondName</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div class="col-4">
                                <label class="form-label" asp-for="@fio.LastName">Фамилия</label>
                                <input type="text" class="form-control required" placeholder="Фамилия" asp-for="@fio.LastName"/>
                            </div>
                            <div class="col-4">
                                <label class="form-label" asp-for="@fio.FirstName">Имя</label>
                                <input type="text" class="form-control required" placeholder="Имя" asp-for="@fio.FirstName">
                            </div>
                            <div class="col-4">
                                <label class="form-label" asp-for="@fio.SecondName">Отчество</label>
                                <input type="text" class="form-control" placeholder="Отчество" asp-for="@fio.SecondName">
                            </div>
                        </div>
                        <div class="row g-3">
                            <div class="col-4">
                                <label class="form-label" asp-for="@request.Snils">СНИЛС</label>
                                <input type="text" class="form-control required snils" placeholder="СНИЛС" asp-for="@request.Snils">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var applicants = @Json.Serialize(applicants);
    var formContent = document.getElementById("smev-data-form-content");
    var documentId;
    var smevForm = {
        init: () => {
            $('#smev_request').find('[type="text"]').each(function () {
                $(this).val('');
            });

            $('#smev_request').find('.required').each(function () {
                addValidation($(this));
            });

            select2Init($('#smev_request'));

            $(formContent).find('.snils').inputmask("999-999-999 99", {
                clearIncomplete: true,
                showMaskOnHover: false
            });
        }
    }

    function ShowErrorInputs() {
    }

    $('select.applicants').each(function () {
        $(this).on('change',
            function () {
                let id = $(this).val();
                let $block = $(this).closest('[data-person]');
                $block.find('[type="text"]').each(function () {
                    $(this).val('');
                });
                if (id) {
                    $block.find('[name$="LastName"]').val(applicants[id].lastName);
                    $block.find('[name$="FirstName"]').val(applicants[id].firstName);
                    $block.find('[name$="SecondName"]').val(applicants[id].secondName);
                    $block.find('[name$="Snils"]').val(applicants[id].snils);
                }
            });
    });

    function addValidation($el) {
        SmevDataFormValidation.addField($el.attr('name'),
            {
                validators: {
                    notEmpty: {}
                }
            });
        SmevDataFormValidation.elements[$el.attr('name')] = [$el[0]];
        $el.addClass('required');
    }

    function removeValidation($el) {
        if ($el.attr('name') in SmevDataFormValidation.fields) {
            SmevDataFormValidation.removeField($el.attr('name'));
        }
    }
</script>