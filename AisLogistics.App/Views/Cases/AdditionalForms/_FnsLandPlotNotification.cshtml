@model AisLogistics.App.Models.AdditionalForms.FnsLandPlotNotificationModel
@{
    IEnumerable<SelectListItem> numberTypeList = new List<SelectListItem>
    {
        new("кадастровый", "1"),
        new("условный", "2"),
        new("инвентарный", "3")
    };

    IEnumerable<SelectListItem> customerTypeList = new List<SelectListItem> {
        new ("налогоплательщик", "1"),
        new ("представитель налогоплательщика", "2")
    };

    IEnumerable<SelectListItem> realEstateTypeList = new List<SelectListItem> {
        new ("Жилой дом (жилое строение)", "1"),
        new ("Квартира (комната)", "2"),
        new ("Гараж (машино-место)", "3"),
        new ("Помещение (сооружение)", "4"),
        new ("Хозяйственное строение (сооружение)", "5"),
    };
}

<div id="additional-data-content">
    <div class="row g-3">
        <div class="col-8 mx-auto">
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="CustomerType">Тип заявителя</label>
                    <select class="select2-nosearch" asp-items="@customerTypeList" asp-for="CustomerType"></select>
                </div>
            </div>
            <h6 class="my-2">Заявитель</h6>
            <div class="row mb-3">
                <div class="col-4">
                    <label class="form-label" asp-for="CustomerFio.LastName">Фамилия</label>
                    <input type="text" asp-for="CustomerFio.LastName" class="form-control" placeholder="Фамилия">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="CustomerFio.FirstName">Имя</label>
                    <input type="text" asp-for="CustomerFio.FirstName" class="form-control" placeholder="Имя">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="CustomerFio.SecondName">Отчество</label>
                    <input type="text" asp-for="CustomerFio.SecondName" class="form-control" placeholder="Отчество">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-4">
                    <label class="form-label" asp-for="BirthDate">Дата рождения</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text">
                            <i class="bi bi-calendar3"></i>
                        </span>
                        <input asp-for="BirthDate" type="text"
                               class="form-control pickdate" placeholder="Дата рождения">
                    </div>
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Inn">ИНН</label>
                    <input type="text" asp-for="Inn" class="form-control" placeholder="ИНН">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="BirthPlace">Место рождения</label>
                    <input type="text" asp-for="BirthPlace" class="form-control" placeholder="Место рождения">
                </div>
            </div>
            <div id="docBlock">
                <h6 class="my-2">Документ, удостоверяющий личность</h6>
                <div class="row mb-3">
                    <div class="col-12">
                        <label class="form-label" asp-for="DocCode">Тип заявителя</label>
                        <select class="select2-nosearch" asp-for="DocCode"
                                data-dictionary='{"dictionary":"FnsDocTypes", "default_value":"@Model.DocCode"}'>
                        </select>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-8">
                        <label class="form-label" asp-for="DocSeriesNumber">Серия и номер</label>
                        <input type="text" class="form-control" placeholder="Серия и номер" asp-for="DocSeriesNumber">
                    </div>
                    <div class="col-4">
                        <label class="form-label" asp-for="DocIssueDate">Дата выдачи</label>
                        <div class="input-group input-group-merge">
                            <span class="input-group-text">
                                <i class="bi bi-calendar3"></i>
                            </span>
                            <input asp-for="DocIssueDate" type="text"
                                   class="form-control pickdate" placeholder="Дата выдачи">
                        </div>
                    </div>
                    <div class="col-12">
                        <label class="form-label" asp-for="DocIssuer">Кем выдан</label>
                        <input type="text" class="form-control" placeholder="Кем выдан" asp-for="DocIssuer">
                    </div>
                </div>
            </div>

            <div id="representativeBlock" data-disabled>
                <h6 class="my-2">Представитель</h6>
                <div class="row mb-1">
                    <div class="col-4">
                        <label class="form-label" asp-for="RepresentativeFio.LastName">Фамилия</label>
                        <input type="text" asp-for="RepresentativeFio.LastName" class="form-control" placeholder="Фамилия">
                    </div>
                    <div class="col-4">
                        <label class="form-label" asp-for="RepresentativeFio.FirstName">Имя</label>
                        <input type="text" asp-for="RepresentativeFio.FirstName" class="form-control" placeholder="Имя">
                    </div>
                    <div class="col-4">
                        <label class="form-label" asp-for="RepresentativeFio.SecondName">Отчество</label>
                        <input type="text" asp-for="RepresentativeFio.SecondName" class="form-control" placeholder="Отчество">
                    </div>
                </div>
            </div>

            <h6 class="my-2">Сведения об земельном участке</h6>            
            <div class="row mb-3">                
                <div class="col-6">
                    <label class="form-label" asp-for="CadastralNumber">Кадастровый номер</label>
                    <input type="text" class="form-control" placeholder="Номер" asp-for="CadastralNumber">
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var additionalForm = $('#additional-data-content');

    $(function() {
        additionalForm.find('[data-disabled]').each(function() {
            visibilityBlock($(this), true, true);
        });

        additionalForm.find("select.select2-nosearch").each(function() {
            $(this).select2({
                //dropdownParent: $("#mainModal"), для select модального окна
                minimumResultsForSearch: Infinity
            });
        });

        additionalForm.find("select.select2-search").each(function() {
            $(this).select2({
                //dropdownParent: $("#mainModal"),
            });
        });

        additionalForm.find("select.select2-nosearch").each(function() {
            $(this).select2({
                minimumResultsForSearch: Infinity,
            });
        });

        let options = { clearIncomplete: true, showMaskOnHover: false };
        additionalForm.find(".pickdate").datepicker({
            language: "ru",
            autoclose: true
        }).inputmask("99.99.9999", options);

        let $doc = additionalForm.find('#docBlock');
        let $inn = additionalForm.find('[name$="Inn"]');        
        additionalForm.find('[name$="Phone"]').inputmask("9{1,15}", options);
        additionalForm.find('[name$="CadastralNumber"]').inputmask("9{2}:9{2}:9{1,7}:9{1,}", options);
        additionalForm.find('[name$="Inn"]').inputmask("9{12}", options);

       $inn.on('input', function() {

            if ($(this).val()) {
                visibilityBlock($doc, true, true);
            }
            else {
                visibilityBlock($doc, false, false);
            }
        });

        $inn.on('blur', function() {
            if ($inn.val().indexOf('_') > -1) {
                $inn.val('');
                visibilityBlock($doc, false, false);
            }
            $inn.trigger('input');
        });

        if ($inn.val()) {
            visibilityBlock($doc, true, true);
        }
        else {
            visibilityBlock($doc, false, false);
        }

        additionalForm.find('#CustomerType').on('change', function() {
            let $representative = additionalForm.find('#representativeBlock');
            switch ($(this).val()) {
                case '1':
                    visibilityBlock($representative, true, true);
                    break;
                case '2':
                    visibilityBlock($representative, false, false);
                    break;
            }
        });

        additionalForm.find('#CustomerType').trigger('change');

        (function getDictionaries() {
            let dicts = new Set();
            $('[data-dictionary]').each(function() {
                let $this = $(this);
                let options = $this.data('dictionary');
                if (!dicts.has(options.dictionary)) {
                    dicts.add(options.dictionary);
                    $.post(`/SmevBase/SmevGetDictionary`,
                        {
                            type: options.dictionary
                        },
                        function(dictionary) {
                            if (dictionary.error) return;
                            fillSelect(options.dictionary, dictionary);
                        });
                }
            });
        }());

        function fillSelect(dictName, dictionary) {
            $.each($(`[data-dictionary*='"${dictName}"']`),
                function() {
                    let $this = $(this);
                    let items = dictionary;
                    $this.empty();
                    if (!$this.hasClass('required')) {
                        $this.append(new Option('Не выбрано', ''));
                    }
                    if ($this.is('[data-value-value]')) {
                        items.dictionary.forEach(function(item) {
                            $this.append(new Option(item.value, item.value));
                        });
                    } else {
                        items.dictionary.forEach(function(item) {
                            $this.append(new Option(item.value, item.key));
                        });
                    }

                    if ($this.data('dictionary').default_value) {
                        let defVal = $this.data('dictionary').default_value;
                        if (defVal) {
                            $this.val(defVal).trigger('update');
                            $this.attr('data-def', defVal);
                        }
                    } else {
                        $this.val('').trigger('update');
                    }
                });
        }

        function visibilityBlock($block, hide, isDisabled) {
            switch (hide) {
                case true:
                    $block.hide();
                    break;
                case false:
                    $block.show();
                    break;
            }

            switch (isDisabled) {
                case true:
                    $block.find('input, select').each(function() {
                        $(this).prop('disabled', true);
                    });
                    break;
                case false:
                    $block.find('input, select').each(function() {
                        $(this).prop('disabled', false);
                    });
                    $block.find('[data-disabled]').each(function() {
                        visibilityBlock($(this), true, true);
                    });
                    break;
            }
        }
    });
</script>