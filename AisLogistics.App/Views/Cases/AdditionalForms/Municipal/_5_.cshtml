@model AisLogistics.App.Models.AdditionalForms.Municipal._5_Model
@{
    IEnumerable<SelectListItem> ResultProviding = new List<SelectListItem>
    {
        new("вручить лично", "1"),
        new("направить по указанному адресу в форме документа на бумажном носителе»", "2"),  
        new("направить в форме электронного документа, в личный кабинет на Едином портале государственных и муниципальных услуг Российской Федерации", "3"),
    };
    }
<div id="additional-data-content">
     <div class="row g-3">
        <div class="col-8 mx-auto">
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="Recipient">Место направления заявления</label>
                    <input type="text" asp-for="Recipient" class="form-control">              
                </div>
            </div>
            <h5 class="my-2">Заявитель</h5>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="Fio">фамилия, имя, отчество </label>
                    <input type="text" asp-for="Fio" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="ResidenceAddress">Адрес места жительства</label>
                    <input type="text" asp-for="ResidenceAddress" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="Fio_Manager">индивидуальный предприниматель, юридическое лицо - наименование</label>
                    <input type="text" asp-for="Fio_Manager" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-8">
                    <label class="form-label" asp-for="PostalAddress">почтовый адрес</label>
                    <input type="text" asp-for="PostalAddress" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Telephone">контактный телефон </label>
                    <input type="text" asp-for="Telephone" class="form-control">
                </div>
            </div>
            <br/>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="Number_Kadastr">Кадастровый (или условный номер)</label>
                    <input type="text" asp-for="Number_Kadastr" class="form-control">
                </div>
             </div>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="LandPlotAddress">Адрес местоположения земельного участка</label>
                    <input type="text" asp-for="LandPlotAddress" class="form-control">
                </div>
            </div>
            <br/>
            <hr/>
            <div id="appliedDocumentList" data-clone-list>
                 @for (var i = 0; i < Model.AppliedDocumentList.Length; i++)
                {
                    <div class="g-3" id="clone@(i)" data-id="@i" data-clone>
                        <hr />
                        <h6 class="my-2 title">Приложение @(i+1)</h6>
                        <div class="row mb-1 align-items-end">
                            <div class="col-11">
                               <label  class="form-label" asp-for="AppliedDocumentList[i].Name">Наименование</label>
                               <input type="text" class="form-control" asp-for="AppliedDocumentList[i].Name">
                            </div>
                            <div class="col-1">
                                <button type="button" class="btn btn-danger" onclick="blockRemove(this)"><i class="bi bi-trash"></i></button>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="row justify-content-center">
                <div class="col-2">
                    <button type="button" class="btn btn-primary" id="addAppliedDocument"><i class="bi bi-plus"></i></button>
                </div>
            </div>
            <br/>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for=" ResultProviding">Результат предоставления муниципальной услуги</label>
                     <select class="select2 w-100" asp-items="@ResultProviding" asp-for=" ResultProviding"></select>                
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-3">
                    <label class="form-label" asp-for="Date">Дата заполнения </label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text">
                                <i class="bx bx-calendar"></i>
                        </span>
                        @{
                            DateTime daetime = DateTime.Now;
                            DateTime date = daetime.Date;
                            if (Model.Date == null)
                            {
                             <input asp-for="Date = @date" type="text"  class="form-control pickdate">
                            }
                            else
                            {
                             <input asp-for="Date" type="text"class="form-control pickdate">
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="originalBlock">
    <div class="g-3" id="appliedDocument" data-id="" data-original>
        <br/>
        <h6 class="my-2 title">Приложение 0</h6>
        <div class="row mb-1 align-items-end">
            <div class="col-11">
                <label class="form-label" asp-for="AppliedDocumentList[0].Name">Наименование</label>
                <input type="text" class="form-control" asp-for="AppliedDocumentList[0].Name">
            </div>
            <div class="col-1">
                <button type="button" class="btn btn-danger content-center" onclick="blockRemove(this)"><i class="bi bi-trash"></i></button>
            </div>
        </div>
    </div>
</div>
<script>
    var additionalForm = $('#additional-data-content');
    var originalBlock = $('#originalBlock');

    $(function() {
        originalBlock.find('[data-original]').each(function(_, item) {
            renameBlock($(item), 100, true);
            visibilityBlock($(item), true, true);
        });

        additionalForm.find('#addAppliedDocument').on('click', () => addForm('appliedDocumentList', 'appliedDocument'));

        additionalForm.find('[data-disabled]').each(function() {
            visibilityBlock($(this), true, true);
        });
                
        let options = { clearIncomplete: true, showMaskOnHover: false };
        additionalForm.find('#Phone').inputmask("9{1,15}", options);        
        additionalForm.find('#PersonalAccount').inputmask("9{1,}", options);        

        additionalForm.find(".pickdate").datepicker({
            language: "ru",
            autoclose: true,
        }).inputmask("99.99.9999", options);                

         function select2Init($block) {
            $block.find("select.select2-nosearch").each(function() {
                $(this).select2({
                    minimumResultsForSearch: Infinity
                });
            });

            $block.find("select.select2-search").each(function() {
                $(this).select2({
                });
            });
        }

        function addForm(cloneListId, originalId) { //Динамическое добавление Принимает (Куда Откуда)
            let $cloneList = additionalForm.find(`#${cloneListId}`);
            let $original = originalBlock.find(`#${originalId}`);
            let $cloneBlock = $original.clone(true);
            let indexId = $cloneList.find('[data-clone]').length;
            renameBlock($cloneBlock, indexId);
            blockInit($cloneBlock);
            $cloneList.find("select").each(function() {
                $(this).select2('destroy');
            });
            $cloneList.append($cloneBlock);
            select2Init($cloneList);
        }        

        function blockInit($block) {
            visibilityBlock($block, false, false);

            $block.find("input[type='text']").each(function() {
                $(this).val("");
            });
        }
    });

    function renameBlock($cloneBlock, indexId, initOriginal = false) {
        if (!initOriginal) {
            $cloneBlock.find('.title').text($cloneBlock.find('.title').text().replace(/\d+/, indexId + 1));
            $cloneBlock.attr("id", `${$cloneBlock.attr("id")}${indexId}`);
            $cloneBlock.attr('data-id', indexId);
            $cloneBlock.attr('data-clone', '');
            $cloneBlock.removeAttr('data-original');
        }

        $cloneBlock.find('input, select, div').each(function() {
            $(this).attr('id', $(this).attr('id')?.replace(/\d+/, indexId));
            if ($(this).is('[name]')) {
                $(this).attr('name', $(this).attr('name').replace(/\d+/, indexId));
            }
        });

        $cloneBlock.find('label').each(function() {
            $(this).attr('for', $(this).attr('for').replace(/\d+/, indexId));
        });
    }

    function blockRemove(el) {
        let $cloneList = $(el).closest('[data-clone-list]');
        el.closest('[data-clone]').remove();
        $cloneList.find('[data-clone]').each(function(index, item) {
            renameBlock($(item), index);
        });
    }

    function visibilityBlock($block, hide, isDisabled) {
        switch (hide) {
            case true:
                $block.hide();
                break;
            case false:
                $block.show();
                break;
        }

        switch (isDisabled) {
            case true:
                $block.find('input, select').each(function() {
                    $(this).prop('disabled', true);
                });
                break;
            case false:
                $block.find('input, select').each(function() {
                    $(this).prop('disabled', false);
                });
                $block.find('[data-disabled]').each(function() {
                    visibilityBlock($(this), true, true);
                });
                break;
        }
    }
</script>

