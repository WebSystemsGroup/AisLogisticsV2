@model AisLogistics.App.Models.AdditionalForms.Municipal._36_Model
<div id="additional-data-content">
    <div class="row g-3">
        <div class="col-8 mx-auto">
            <div class="row mb-3">
                <div class="col-12">
                   <label class="form-label" asp-for="Recipient">Место направления заявления</label>
                    <input type="text" asp-for="Recipient" class="form-control">                  
                </div>
            </div>
            <h5 class="my-2">Заявитель</h5>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="Fio">ФИО</label>
                    <input type="text" asp-for="Fio" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="ResidenceAddress">Адрес</label>
                    <input type="text" asp-for="ResidenceAddress" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-4">
                    <label class="form-label" asp-for="Phone">Телефон</label>
                    <input type="text" asp-for="Phone" class="form-control">
                </div>
            </div>
            <hr/>
            <br/>
            <div class="row mb-3">
                <div class="col-4">
                    <label class="form-label" asp-for="Arrea">площадь</label>
                    <input type="text" asp-for="Arrea" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Adress">по адресу</label>
                    <input type="text" asp-for="Adress" class="form-control">
                </div>
            </div>
            <h5 class="my-2">Члены семьи:</h5>
            <div id="appliedFamilyList" data-clone-list>
                @for (var i = 0; i < Model.AppliedFamilyList.Length; i++)
                {
                    <div class="g-3" id="clone@(i)" data-id="@i" data-clone>
                        <hr />
                         <h6 class="my-2 title">Член семьи @(i+1)</h6>
                        <div class="row mb-1 align-items-center">
                            <div class="col-8">
                                <div class="row mb-3 align-items-end">
                                    <div class="col-10">
                                        <div class="row mb-3">
                                            <div class="col-7">
                                                <label class="form-label" asp-for="AppliedFamilyList[i].Fio_Family">ФИО</label>
                                                <input type="text" class="form-control" asp-for="AppliedFamilyList[i].Fio_Family">
                                            </div>
                                            <div class="col-sm">
                                                 <label class="form-label" asp-for="AppliedFamilyList[i].Degree_Kinship">Степень родства</label>
                                                 <input type="text" class="form-control" asp-for="AppliedFamilyList[i].Degree_Kinship">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-1">
                                     <button type="button" class="btn btn-danger content-center " onclick="blockRemove(this)"><i class="bx bx-trash-alt"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="row justify-content-center">
                <div class="col-2">
                    <button type="button" class="btn btn-primary" id="addAppliedFamilyDocument"><i class="bx bx-plus"></i></button>
                </div>
            </div>
       
        </div>
    </div>
 </div>

<div id="originalBlock">    
    <div class="g-3" id="appliedFamilyDocument" data-id="" data-original>
         <hr />
         <h6 class="my-2 title">Член семьи 0</h6>
         <div class="row mb-1 align-items-center">
              <div class="col-8">
                   <div class="row mb-3 align-items-end">
                        <div class="col-7">
                             <label class="form-label" asp-for="AppliedFamilyList[0].Fio_Family">ФИО</label>
                             <input type="text" class="form-control" asp-for="AppliedFamilyList[0].Fio_Family">
                        </div>
                        <div class="col-sm">
                             <label class="form-label" asp-for="AppliedFamilyList[0].Degree_Kinship">Степень родства</label>
                             <input type="text" class="form-control" asp-for="AppliedFamilyList[0].Degree_Kinship[0]">
                        </div>
                   </div>
              </div>
         </div>
         <div class="col-1">
              <button type="button" class="btn btn-danger content-center " onclick="blockRemove(this)"><i class="bx bx-trash-alt bx-sm"></i></button>
         </div>
    </div>
</div>
<script>
    var additionalForm = $('#additional-data-content');
    var originalBlock = $('#originalBlock');

   

    $(function() {
        originalBlock.find('[data-original]').each(function(_, item) {
            renameBlock($(item), 100, true);
            visibilityBlock($(item), true, true);
        });

        additionalForm.find('#addAppliedFamilyDocument').on('click', () => addForm('appliedFamilyList', 'appliedFamilyDocument'));


        additionalForm.find('[data-disabled]').each(function() {
            visibilityBlock($(this), true, true);
        });

        let options = { clearIncomplete: true, showMaskOnHover: false };
        additionalForm.find('#Phone').inputmask("9{1,15}", options);
        additionalForm.find('#PersonalAccount').inputmask("9{1,}", options);

        additionalForm.find(".pickdate").datepicker({
            language: "ru",
            autoclose: true,
        }).inputmask("99.99.9999", options);

        function addForm(cloneListId, originalId) { //Динамическое добавление Принимает (Куда Откуда)
            let $cloneList = additionalForm.find(`#${cloneListId}`);
            let $original = originalBlock.find(`#${originalId}`);
            let $cloneBlock = $original.clone(true);
            let indexId = $cloneList.find('[data-clone]').length;
            renameBlock($cloneBlock, indexId);
            blockInit($cloneBlock);
            $cloneList.find("select").each(function() {
                $(this).select2('destroy');
            });
            $cloneList.append($cloneBlock);
            select2Init($cloneList);
        }

        function blockInit($block) {
            visibilityBlock($block, false, false);

            $block.find("input[type='text']").each(function() {
                $(this).val("");
            });
        }
    });
    function select2Init($block) {
        $block.find("select.select2-nosearch").each(function() {
            $(this).select2({
                minimumResultsForSearch: Infinity
            });
        });

        $block.find("select.select2-search").each(function() {
            $(this).select2({
            });
        });
    }
    function renameBlock($cloneBlock, indexId, initOriginal = false) {
        if (!initOriginal) {
            $cloneBlock.find('.title').text($cloneBlock.find('.title').text().replace(/\d+/, indexId + 1));
            $cloneBlock.attr("id", `${$cloneBlock.attr("id")}${indexId}`);
            $cloneBlock.attr('data-id', indexId);
            $cloneBlock.attr('data-clone', '');
            $cloneBlock.removeAttr('data-original');
        }

        $cloneBlock.find('input, select, div').each(function() {
            $(this).attr('id', $(this).attr('id')?.replace(/\d+/, indexId));
            if ($(this).is('[name]')) {
                $(this).attr('name', $(this).attr('name').replace(/\d+/, indexId));
            }
        });

        $cloneBlock.find('label').each(function() {
            $(this).attr('for', $(this).attr('for').replace(/\d+/, indexId));
        });
    }

    function blockRemove(el) {
        let $cloneList = $(el).closest('[data-clone-list]');
        el.closest('[data-clone]').remove();
        $cloneList.find('[data-clone]').each(function(index, item) {
            renameBlock($(item), index);
        });
    }

    function visibilityBlock($block, hide, isDisabled) {
        switch (hide) {
            case true:
                $block.hide();
                break;
            case false:
                $block.show();
                break;
        }

        switch (isDisabled) {
            case true:
                $block.find('input, select').each(function() {
                    $(this).prop('disabled', true);
                });
                break;
            case false:
                $block.find('input, select').each(function() {
                    $(this).prop('disabled', false);
                });
                $block.find('[data-disabled]').each(function() {
                    visibilityBlock($(this), true, true);
                });
                break;
        }
    }
</script>
