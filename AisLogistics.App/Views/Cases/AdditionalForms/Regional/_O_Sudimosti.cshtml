@model AisLogistics.App.Models.AdditionalForms.Regional.O_SudimostiModel
@using AisLogistics.App.ViewModels.SelectListViewModel
@{
    IEnumerable<SelectListItem> Rezult = new List<SelectListItem>
    {
        new("ТОСП в с. Черга филиала АУ РА МФЦ в Шебалинском районе", "ТОСП в с. Черга филиала АУ РА МФЦ в Шебалинском районе"),
        new("ТОСП в с. Саратан филиала АУ РА МФЦ в Улаганском районе", "ТОСП в с. Саратан филиала АУ РА МФЦ в Улаганском районе"),
        new("ТОСП в с. Акташ филиала АУ РА МФЦ в Улаганском районе", "ТОСП в с. Акташ филиала АУ РА МФЦ в Улаганском районе"),
        new("ТОСП в с. Чендек филиала АУ РА МФЦ в Усть-Коксинском районе", "ТОСП в с. Чендек филиала АУ РА МФЦ в Усть-Коксинском районе"),
        new("Филиал АУ РА МФЦ в Улаганском районе", "Филиал АУ РА МФЦ в Улаганском районе"),
        new("ТОСП в с. Балыкча филиала АУ РА МФЦ в Улаганском районе", "ТОСП в с. Балыкча филиала АУ РА МФЦ в Улаганском районе"),
        new("ТОСП в с. Новый Бельтир филиала АУ РА МФЦ в Кош-Агачском районе", "ТОСП в с. Новый Бельтир филиала АУ РА МФЦ в Кош-Агачском районе"),
        new("ТОСП в с. Ябоган филиала АУ РА МФЦ в Усть-Канском районе", "ТОСП в с. Ябоган филиала АУ РА МФЦ в Усть-Канском районе"),
        new("ТОСП в с. Талда филиала АУ РА МФЦ в Усть-Коксинском районе", "ТОСП в с. Талда филиала АУ РА МФЦ в Усть-Коксинском районе"),
        new("ТОСП филиала АУ Республики Алтай \"МФЦ\" в г. Горно-Алтайске № 2", "ТОСП филиала АУ Республики Алтай \"МФЦ\" в г. Горно-Алтайске № 2"),
        new("ТОСП в с. Паспаул филиала АУ РА МФЦ в Чойском районе", "ТОСП в с. Паспаул филиала АУ РА МФЦ в Чойском районе"),
        new("ТОСП в с. Балыктуюль филиала АУ РА МФЦ в Улаганском районе", "ТОСП в с. Балыктуюль филиала АУ РА МФЦ в Улаганском районе"),
        new("ТОСП в с. Усть-Кумир филиала АУ РА МФЦ в Усть-Канском районе", "ТОСП в с. Усть-Кумир филиала АУ РА МФЦ в Усть-Канском районе"),
        new("Филиал АУ РА МФЦ в Усть-Канском районе", "Филиал АУ РА МФЦ в Усть-Канском районе"),
        new("Филиал АУ РА МФЦ в Усть-Коксинском районе", "Филиал АУ РА МФЦ в Усть-Коксинском районе"),
        new("ТОСП в с. Иня филиала АУ РА МФЦ в Онгудайском районе", "ТОСП в с. Иня филиала АУ РА МФЦ в Онгудайском районе"),
        new("ТОСП в с. Кебезень филиала АУ РА МФЦ в Турочакском районе", "ТОСП в с. Кебезень филиала АУ РА МФЦ в Турочакском районе"),
        new("ТОСП филиала АУ Республики Алтай \"МФЦ\"в г. Горно-Алтайске № 1", "ТОСП филиала АУ Республики Алтай \"МФЦ\" в г. Горно-Алтайске № 1"),
        new("Филиал АУ РА МФЦ в г. Горно-Алтайске 2", "Филиал АУ РА МФЦ в г. Горно-Алтайске 2"),
        new("ТОСП в с. Курай филиала АУ РА МФЦ в Кош-Агачском районе", "ТОСП в с. Курай филиала АУ РА МФЦ в Кош-Агачском районе"),
        new("ТОСП в с.Чепош филиала АУ РА МФЦ в Чемальском районе", "ТОСП в с.Чепош филиала АУ РА МФЦ в Чемальском районе"),
        new("ТОСП в с. Теньга филиала АУ РА МФЦ в Онгудайском районе", "ТОСП в с. Теньга филиала АУ РА МФЦ в Онгудайском районе"),
        new("ТОСП в с. Огневка филиала АУ РА МФЦ в Усть-Коксинском районе", "ТОСП в с. Огневка филиала АУ РА МФЦ в Усть-Коксинском районе"),
        new("ТОСП в с. Соузга филиала АУ РА МФЦ в Майминском районе", "ТОСП в с. Соузга филиала АУ РА МФЦ в Майминском районе"),
        new("ТОСП в с. Джазатор филиала АУ РА МФЦ в Кош-Агачском районе", "ТОСП в с. Джазатор филиала АУ РА МФЦ в Кош-Агачском районе"),
        new("Филиал АУ РА МФЦ в г. Горно-Алтайске 1", "Филиал АУ РА МФЦ в г. Горно-Алтайске 1"),
        new("ТОСП в с. Амур филиала АУ РА МФЦ в Усть-Коксинском районе", "ТОСП в с. Амур филиала АУ РА МФЦ в Усть-Коксинском районе"),
        new("Филиал АУ РА МФЦ в Майминском районе", "Филиал АУ РА МФЦ в Майминском районе"),
        new("Филиал АУ РА МФЦ в Онгудайском районе", "Филиал АУ РА МФЦ в Онгудайском районе"),
        new("Филиал АУ РА МФЦ в Чойском районе", "Филиал АУ РА МФЦ в Чойском районе"),
        new("ТОСП в с. Ело филиала АУ РА МФЦ в Онгудайском районе", "ТОСП в с. Ело филиала АУ РА МФЦ в Онгудайском районе"),
        new("Филиал АУ РА МФЦ в Кош-Агачском районе", "Филиал АУ РА МФЦ в Кош-Агачском районе"),
        new("Филиал АУ РА МФЦ в Шебалинском районе", "Филиал АУ РА МФЦ в Шебалинском районе"),
        new("ТОСП в с. Бирюля филиала АУ РА МФЦ в Майминском районе", "ТОСП в с. Бирюля филиала АУ РА МФЦ в Майминском районе"),
        new("ТОСП в с. Тобелер филиала АУ РА МФЦ в Кош-Агачском районе", "ТОСП в с. Тобелер филиала АУ РА МФЦ в Кош-Агачском районе"),
        new("ТОСП в с.Элекмонар филиала АУ РА МФЦ в Чемальском районе", "ТОСП в с.Элекмонар филиала АУ РА МФЦ в Чемальском районе"),
        new("ТОСП в с. Белый Ануй филиала АУ РА МФЦ в Усть-Канском районе", "ТОСП в с. Белый Ануй филиала АУ РА МФЦ в Усть-Канском районе"),
        new("ТОСП в с. Кырлык филиала АУ РА МФЦ в Усть-Канском районе", "ТОСП в с. Кырлык филиала АУ РА МФЦ в Усть-Канском районе"),
        new("ТОСП в с. Катанда филиала АУ РА МФЦ в Усть-Коксинском районе", "ТОСП в с. Катанда филиала АУ РА МФЦ в Усть-Коксинском районе"),
        new("Филиал АУ РА МФЦ в Турочакском районе", "Филиал АУ РА МФЦ в Турочакском районе"),
        new("ТОСП в с. Барагаш филиала АУ РА МФЦ в Шебалинском районе", "ТОСП в с. Барагаш филиала АУ РА МФЦ в Шебалинском районе"),
        new("ТОСП филиала АУ Республики Алтай \"МФЦ\" в г. Горно-Алтайске № 3", "ТОСП филиала АУ Республики Алтай \"МФЦ\" в г. Горно-Алтайске № 3"),
        new("ТОСП в с. Яконур филиала АУ РА МФЦ в Усть-Канском районе", "ТОСП в с. Яконур филиала АУ РА МФЦ в Усть-Канском районе"),
        new("ТОСП в с. Сейка филиала АУ РА МФЦ в Чойском районе", "ТОСП в с. Сейка филиала АУ РА МФЦ в Чойском районе"),
        new("ТОСП в с. Верх -Уймон филиала АУ РА МФЦ в Усть-Коксинском районе", "ТОСП в с. Верх -Уймон филиала АУ РА МФЦ в Усть-Коксинском районе"),
        new("Филиал АУ РА МФЦ в Чемальском районе", "Филиал АУ РА МФЦ в Чемальском районе"),
        new("ТОСП в с. Кызыл-Озек филиала АУ РА МФЦ в Майминском районе", "ТОСП в с. Кызыл-Озек филиала АУ РА МФЦ в Майминском районе"),
        new("ТОСП в с. Каракокша филиала АУ РА МФЦ в Чойском районе", "ТОСП в с. Каракокша филиала АУ РА МФЦ в Чойском районе"),
        new("ТОСП в с. Артыбаш филиала АУ РА МФЦ в Турочакском районе", "ТОСП в с. Артыбаш филиала АУ РА МФЦ в Турочакском районе"),
        new("ТОСП в с. Манжерок филиала АУ РА МФЦ в Майминском районе", "ТОСП в с. Манжерок филиала АУ РА МФЦ в Майминском районе"),
        new("ТОСП в с. Каракол филиал АУ РА МФЦ в Онгудайском районе", "ТОСП в с. Каракол филиал АУ РА МФЦ в Онгудайском районе")
    };
    IEnumerable<SelectListItem> Region = new List<SelectListItem>
    {
        new("Алтайский край", "Алтайский край"),
        new("Амурская область", "Амурская область"),
        new("Архангельская область", "Архангельская область"),
        new("Астраханская область", "Астраханская область"),
        new("Белгородская область", "Белгородская область"),
        new("Брянская область", "Брянская область"),
        new("Владимирская область", "Владимирская область"),
        new("Волгоградская область", "Волгоградская область"),
        new("Вологодская область", "Вологодская область"),
        new("Воронежская область", "Воронежская область"),
        new("г. Москва", "г. Москва"),
        new("Еврейская автономная область", "Еврейская автономная область"),
        new("Забайкальский край", "Забайкальский край"),
        new("Ивановская область", "Ивановская область"),
        new("Иные территории, включая город и космодром Байконур", "Иные территории, включая город и космодром Байконур"),
        new("Иркутская область", "Иркутская область"),
        new("Кабардино-Балкарская Республика", "Кабардино-Балкарская Республика"),
        new("Калининградская область", "Калининградская область"),
        new("Калужская область", "Калужская область"),
        new("Камчатский край", "Камчатский край"),
        new("Карачаево-Черкесская Республика", "Карачаево-Черкесская Республика"),
        new("Кемеровская область — Кузбасс", "Кемеровская область — Кузбасс"),
        new("Кировская область", "Кировская область"),
        new("Костромская область", "Костромская область"),
        new("Краснодарский край", "Краснодарский край"),
        new("Красноярский край", "Красноярский край"),
        new("Курганская область", "Курганская область"),
        new("Курская область", "Курская область"),
        new("Ленинградская область", "Ленинградская область"),
        new("Липецкая область", "Липецкая область"),
        new("Магаданская область", "Магаданская область"),
        new("Московская область", "Московская область"),
        new("Мурманская область", "Мурманская область"),
        new("Ненецкий автономный округ", "Ненецкий автономный округ"),
        new("Нижегородская область", "Нижегородская область"),
        new("Новгородская область", "Новгородская область"),
        new("Новосибирская область", "Новосибирская область"),
        new("Омская область", "Омская область"),
        new("Оренбургская область", "Оренбургская область"),
        new("Орловская область", "Орловская область"),
        new("Пензенская область", "Пензенская область"),
        new("Пермский край", "Пермский край"),
        new("Приморский край", "Приморский край"),
        new("Псковская область", "Псковская область"),
        new("Республика Адыгея (Адыгея)", "Республика Адыгея (Адыгея)"),
        new("Республика Алтай", "Республика Алтай"),
        new("Республика Башкортостан", "Республика Башкортостан"),
        new("Республика Бурятия", "Республика Бурятия"),
        new("Республика Дагестан", "Республика Дагестан"),
        new("Республика Ингушетия", "Республика Ингушетия"),
        new("Республика Калмыкия", "Республика Калмыкия"),
        new("Республика Карелия", "Республика Карелия"),
        new("Республика Коми", "Республика Коми"),
        new("Республика Крым", "Республика Крым"),
        new("Республика Марий Эл", "Республика Марий Эл"),
        new("Республика Мордовия", "Республика Мордовия"),
        new("Республика Саха (Якутия)", "Республика Саха (Якутия)"),
        new("Республика Северная Осетия — Алания", "Республика Северная Осетия — Алания"),
        new("Республика Татарстан (Татарстан)", "Республика Татарстан (Татарстан)"),
        new("Республика Тыва", "Республика Тыва"),
        new("Республика Хакасия", "Республика Хакасия"),
        new("Ростовская область", "Ростовская область"),
        new("Рязанская область", "Рязанская область"),
        new("Самарская область", "Самарская область"),
        new("Санкт-Петербург", "Санкт-Петербург"),
        new("Саратовская область", "Саратовская область"),
        new("Сахалинская область", "Сахалинская область"),
        new("Свердловская область", "Свердловская область"),
        new("Севастополь", "Севастополь"),
        new("Смоленская область", "Смоленская область"),
        new("Ставропольский край", "Ставропольский край"),
        new("Тамбовская область", "Тамбовская область"),
        new("Тверская область", "Тверская область"),
        new("Томская область", "Томская область"),
        new("Тульская область", "Тульская область"),
        new("Тюменская область", "Тюменская область"),
        new("Удмуртская Республика", "Удмуртская Республика"),
        new("Ульяновская область", "Ульяновская область"),
        new("Хабаровский край", "Хабаровский край"),
        new("Ханты-Мансийский автономный округ — Югра", "Ханты-Мансийский автономный округ — Югра"),
        new("Челябинская область", "Челябинская область"),
        new("Чеченская Республика", "Чеченская Республика"),
        new("Чувашская Республика — Чувашия", "Чувашская Республика — Чувашия"),
        new("Чукотский автономный округ", "Чукотский автономный округ"),
        new("Ямало-Ненецкий автономный округ", "Ямало-Ненецкий автономный округ"),
        new("Ярославская область", "Ярославская область")
    };
}
<div id="additional-data-content">
    <div class="row g-3">
        <div class="col-8 mx-auto">
            <div class="row mb-3">
                <div class="col-9">
                    <label class="form-label" asp-for="Fio">От (ФИО)</label>
                    <input type="text" asp-for="Fio" class="form-control">
                </div>
                <div class="col-3">
                    <label class="form-label" asp-for="Phone">Телефон</label>
                    <input type="text" asp-for="Phone" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <span class="form-check form-check-inline mt-2">
                        <input class="form-check-input" type="radio" asp-for="Doc" value="Лично">
                        <label class="form-check-label" asp-for="Doc">Лично</label>
                    </span>
                    <span class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" asp-for="Doc" value="По доверенности">
                        <label class="form-check-label" asp-for="Doc">По доверенности</label>
                    </span>
                    <span class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" asp-for="Doc" value="Иной документ подтверждающий родство">
                        <label class="form-check-label" asp-for="Doc">Иной документ подтверждающий родство</label>
                    </span>
                    <input type="text" class="form-control" asp-for="DocRecvizit">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="ResidenceAddress">Адрес регистрации по месту жительства (пребывания)</label>
                    <input type="text" asp-for="ResidenceAddress" class="form-control">
                </div>
            </div>
            <hr />
            <br />
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="FioP">ФИО проверяемого лица</label>
                    <input type="text" asp-for="FioP" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="FioPI">ранее имеющаяся ФИО</label>
                    <input type="text" asp-for="FioPI" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-3">
                    <label class="form-label" asp-for="BirthDate">Дата рождения</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text">
                            <i class="bx bx-calendar"></i>
                        </span>
                        <input asp-for="BirthDate" type="text"
                               class="form-control pickdate">
                    </div>
                </div>
                <div class="col-9">
                    <label class="form-label" asp-for="BirthAddress">место рождения </label>
                    <input type="text" asp-for="BirthAddress" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="ResidenceAddressP">Адрес места жительства (пребывания)</label>
                    <input type="text" asp-for="ResidenceAddressP" class="form-control">
                </div>
            </div>
            <h6 class="my-2">Документ удостоверяющий личность</h6>
            <div class="row mb-3" data-doc>
                <div class="col-12 mb-2">
                    <label class="form-label" asp-for="DocType">Тип документа</label>
                    <select class="form-select select2-search" asp-for="DocType" onchange="docTypeChange($(this))" asp-items="@SelectListViewModel.DocumentTypeListBase"></select>
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="DocSeries">Серия</label>
                    <input type="text" class="form-control" asp-for="DocSeries">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="DocNumber">Номер</label>
                    <input type="text" class="form-control" asp-for="DocNumber">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="DocIssueDate">Дата выдачи</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text">
                            <i class="bx bx-calendar"></i>
                        </span>
                        <input asp-for="DocIssueDate" type="text" class="form-control pickdate">
                    </div>
                </div>
                <div class="col-12 mt-2">
                    <label class="form-label" asp-for="DocIssuer">Кем выдан</label>
                    <input type="text" class="form-control" asp-for="DocIssuer">
                </div>
            </div>
            <hr />
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="Region"> регионы РФ, в которых проживал(а) или пребывал(а) ранее, в том числе вступал(а) в брак</label>
                    <select class="select2-search" asp-for="Region" asp-items="@Region"></select>
                </div>
            </div>
            <br />
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for=" Rezult">Справку получить в</label>
                    <select asp-items="@Rezult" class="select2-nosearch" asp-for="Rezult"></select>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for=" Name">Приложение</label>
                    <input type="text" class="form-control" asp-for="Name">
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var additionalForm = $('#additional-data-content');
    var originalBlock = $('#originalBlock');
    var btnNext = $('.btn-next');
    additionalForm.find("select.select2-search").each(function () {
        $(this).select2({
            //dropdownParent: $("#mainModal"),
        });
    });
    var applicant = {
        fio: $("#Fio"),
        phone: $("#Phone"),
        fiop: $("#FioP"),
        docSeries: $("#DocSeries"),
        docNumber: $("#DocNumber"),
        docType: $("#DocType"),
        docIssueDate: $("#DocIssueDate"),
        birthDate: $("#BirthDate"),
        birthPlace: $("#BirthAddress"),
        docIssuer: $("#DocIssuer"),
        residenceAddress: $("#ResidenceAddress"),
        residenceAddressp: $("#ResidenceAddressP")
    };
    (function getDictionaries() {
        let dicts = new Set();
        $('[data-dictionary]').each(function () {
            let $this = $(this);
            let options = $this.data('dictionary');
            if (!dicts.has(options.dictionary)) {
                dicts.add(options.dictionary);
                $.post(`/SmevBase/SmevGetDictionary`,
                    {
                        type: options.dictionary
                    },
                    function (dictionary) {
                        if (dictionary.error) return;
                        fillSelect(options.dictionary, dictionary);
                    });
            }
        });
    }());

    function fillSelect(dictName, dictionary) {
        $.each($(`[data-dictionary*='"${dictName}"']`),
            function () {
                let $this = $(this);
                let items = dictionary;
                $this.empty();
                if (!$this.hasClass('required')) {
                    $this.append(new Option('Не выбрано', ''));
                }
                if ($this.is('[data-value-value]')) {
                    items.dictionary.forEach(function (item) {
                        $this.append(new Option(item.value, item.value));
                    });
                } else {
                    items.dictionary.forEach(function (item) {
                        $this.append(new Option(item.value, item.key));
                    });
                }

                if ($this.data('dictionary').default_value) {
                    let defVal = $this.data('dictionary').default_value;
                    $this.val(defVal).trigger('update');
                    $this.attr('data-def', defVal);
                } else {
                    $this.val('').trigger('update');
                }
            });
    }

    $(function () {
        if (btnNext.length > 0) {
            btnNext.on('click', function appContent() {
                applicant.fio.val($("#customer_LastName").val() + ' ' + $("#customer_FirstName").val() + ' ' + $("#customer_SecondName").val());
                applicant.phone.val($("#customer_CustomerPhone1").val());
                applicant.fiop.val($("#customer_LastName").val() + ' ' + $("#customer_FirstName").val() + ' ' + $("#customer_SecondName").val());
                applicant.docType.val($("#customer_SDocumentsIdentityId").val()).trigger('change');
                applicant.docSeries.val($("#customer_DocumentSerial").val());
                applicant.docNumber.val($("#customer_DocumentNumber").val());
                applicant.birthDate.val($("#customer_DocumentBirthDate").val());
                applicant.docIssuer.val($("#customer_DocumentIssueBody").val());
                applicant.docIssueDate.val($("#customer_DocumentIssueDate").val());
                applicant.birthPlace.val($("#customer_DocumentBirthPlace").val());
                applicant.residenceAddress.val($("#customer_CustomerAddressResidence").val());
                applicant.residenceAddressp.val($("#customer_CustomerAddressResidence").val());
                let options = { clearIncomplete: true, showMaskOnHover: false };
                switch ($("#customer_SDocumentsIdentityId").val()) {
                    case '21':
                        applicant.docNumber.inputmask("999999", options);
                        applicant.docSeries.inputmask("9999", options);
                        break;
                    case '3':
                        applicant.docSeries.inputmask("", { regex: "^[XIVLMC]{1,4}-[А-ЯЁ]{2}$", clearIncomplete: true, showMaskOnHover: false });
                        applicant.docNumber.inputmask("999999", options);
                        break;
                    default:
                        applicant.docSeries.inputmask("", options);
                        applicant.docNumber.inputmask("", options);
                        break;
                }
            });
        };
        if ($('#Recipient').val() === '') {
            $('#Recipient').val('Информационный центр Министерства внутренних дел по Республике Алтай')
        };
        if ($('#Name').val() === '') {
            $('#Name').val('Все заполненные страницы паспорта гражданина РФ')
        };

        originalBlock.find('[data-original]').each(function (_, item) {
            renameBlock($(item), 100, true);
            visibilityBlock($(item), true, true);
        });

        additionalForm.find('#addAppliedDocument').on('click', () => addForm('appliedDocumentList', 'appliedDocument'));

        additionalForm.find('[data-disabled]').each(function () {
            visibilityBlock($(this), true, true);
        });


        additionalForm.find("select.select2-search").each(function () {
            $(this).select2({
                //dropdownParent: $("#mainModal"),
            });
        });

        additionalForm.find("select.select2-nosearch").each(function () {
            $(this).select2({
                minimumResultsForSearch: Infinity,
            });
        });

        let options = { clearIncomplete: true, showMaskOnHover: false };
        additionalForm.find('#Phone').inputmask("+7(999) 999-99-99", { clearIncomplete: true, showMaskOnHover: false });
        switch ($("#select2-DocType-container").html()) {
            case 'Паспорт гражданина РФ':
                applicant.docNumber.inputmask("999999", options);
                applicant.docSeries.inputmask("9999", options);
                break;
            case 'Свидетельство о рождении':
                applicant.docSeries.inputmask("", { regex: "^[XIVLMC]{1,4}-[А-ЯЁ]{2}$", clearIncomplete: true, showMaskOnHover: false });
                applicant.docNumber.inputmask("999999", options);
                break;
            default:
                applicant.docSeries.inputmask("", options);
                applicant.docNumber.inputmask("", options);
                break;
        }
        additionalForm.find(".pickdate").datepicker({
            language: "ru",
            autoclose: true,
        }).inputmask("99.99.9999", options);

        function select2Init($block) {
            $block.find("select.select2-nosearch").each(function () {
                $(this).select2({
                    minimumResultsForSearch: Infinity
                });
            });

            $block.find("select.select2-search").each(function () {
                $(this).select2({
                });
            });
        }

        function addForm(cloneListId, originalId) { //Динамическое добавление Принимает (Куда Откуда)
            let $cloneList = additionalForm.find(`#${cloneListId}`);
            let $original = originalBlock.find(`#${originalId}`);
            let $cloneBlock = $original.clone(true);
            let indexId = $cloneList.find('[data-clone]').length;
            renameBlock($cloneBlock, indexId);
            blockInit($cloneBlock);
            $cloneList.find("select").each(function () {
                $(this).select2('destroy');
            });
            $cloneList.append($cloneBlock);
            select2Init($cloneList);
        }

        function blockInit($block) {
            visibilityBlock($block, false, false);

            $block.find("input[type='text']").each(function () {
                $(this).val("");
            });
        }
    });

    function renameBlock($cloneBlock, indexId, initOriginal = false) {
        if (!initOriginal) {
            $cloneBlock.find('.title').text($cloneBlock.find('.title').text().replace(/\d+/, indexId + 1));
            $cloneBlock.attr("id", `${$cloneBlock.attr("id")}${indexId}`);
            $cloneBlock.attr('data-id', indexId);
            $cloneBlock.attr('data-clone', '');
            $cloneBlock.removeAttr('data-original');
        }

        $cloneBlock.find('input, select, div').each(function () {
            $(this).attr('id', $(this).attr('id')?.replace(/\d+/, indexId));
            if ($(this).is('[name]')) {
                $(this).attr('name', $(this).attr('name').replace(/\d+/, indexId));
            }
        });

        $cloneBlock.find('label').each(function () {
            $(this).attr('for', $(this).attr('for').replace(/\d+/, indexId));
        });
    }

    function blockRemove(el) {
        let $cloneList = $(el).closest('[data-clone-list]');
        el.closest('[data-clone]').remove();
        $cloneList.find('[data-clone]').each(function (index, item) {
            renameBlock($(item), index);
        });
    }

    function visibilityBlock($block, hide, isDisabled) {
        switch (hide) {
            case true:
                $block.hide();
                break;
            case false:
                $block.show();
                break;
        }

        switch (isDisabled) {
            case true:
                $block.find('input, select').each(function () {
                    $(this).prop('disabled', true);
                });
                break;
            case false:
                $block.find('input, select').each(function () {
                    $(this).prop('disabled', false);
                });
                $block.find('[data-disabled]').each(function () {
                    visibilityBlock($(this), true, true);
                });
                break;
        }
    }

    function docTypeChange($el) {
        let $docBlock = $el.closest('[data-doc]');
        let docOptions = { clearIncomplete: true, showMaskOnHover: false }; 
        switch ($el.val()) {
            case '21':
                $docBlock.find('[name$="Series"]').inputmask("99 99", docOptions);
                $docBlock.find('[name$="Number"]').inputmask("9{6}", docOptions);
                break;
            case '3':
                $docBlock.find('[name$="Series"]').inputmask("", { regex: "^[XIVLMC]{1,4}-[А-ЯЁ]{2}$", clearIncomplete: true, showMaskOnHover: false });
                $docBlock.find('[name$="Number"]').inputmask("9{6}", docOptions);
                break;
            default:
                $docBlock.find('[name$="Series"]').inputmask("", docOptions);
                $docBlock.find('[name$="Number"]').inputmask("", docOptions);
                break;

        }
    }
</script>


