@model AisLogistics.App.Models.AdditionalForms.FssTechnicalMeansRehabilitationModel
@{
    IEnumerable<SelectListItem>? docList = Model.AppliedDocuments?.Select(i => new SelectListItem(i, i));

    IEnumerable<SelectListItem> methodInformingList = new List<SelectListItem>
    {
        new("Не выбрано", ""),
        new("по телефону", "1"),
        new("домашний", "2"),
        new("мобильный", "3"),
        new("смс-информирование", "4"),
        new("посредством почтовых отправлений", "5"),
        new("по электронной почте", "6"),
        new("иным способом", "7")
    };

    IEnumerable<SelectListItem> methodResultList = new List<SelectListItem>
    {
        new("Не выбрано", ""),
        new("Вручить в территориальном органе Фонда", "1"),
        new("Направить по почте", "2"),
        new("Вручить в МФЦ", "3"),
        new("Направить в форме электронного документа", "4")
    };

    IEnumerable<SelectListItem> methodListingCompensationList = new List<SelectListItem>
    {
        new("Не выбрано", ""),
        new("Почтовым переводом", "1"),
        new("Перечислением средств на счет, открытый в кредитной организации", "2")
    };
}

<div id="additional-data-content">
    <div class="row g-3">
        <div class="col-8 mx-auto">
            @*<div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="FssDepartmentName">Наименование территориального органа ФСС РФ</label>
                    <input type="text" asp-for="FssDepartmentName" class="form-control">
                </div>
            </div>
            <hr />*@
            <h5 class="my-2">Заявитель</h5>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="Customer.Fio">ФИО</label>
                    <input type="text" asp-for="Customer.Fio" class="form-control">
                </div>
                <div class="col-12">
                    <label class="form-label" asp-for="Customer.Address">Адрес проживания</label>
                    <input type="text" asp-for="Customer.Fio" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Customer.Snils">СНИЛС</label>
                    <input type="text" asp-for="Customer.Snils" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Customer.BirthDate">Дата рождения</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text">
                            <i class="bi bi-calendar3"></i>
                        </span>
                        <input asp-for="Customer.BirthDate" type="text"
                               class="form-control pickdate">
                    </div>
                </div>
            </div>
            <h6 class="my-2">Документ, удостоверяющий личность</h6>
            <div class="row mb-1">
                <div class="col-12">
                    <label class="form-label" asp-for="Customer.DocName">Наименование документа</label>
                    <select class="select2-nosearch" asp-for="Customer.DocName" data-value-value
                            data-dictionary='{"dictionary":"FnsDocTypes", "default_value":"@Model.Customer.DocName"}'>
                    </select>
                </div>

                <div class="col-4">
                    <label class="form-label" asp-for="Customer.DocSeries">Серия</label>
                    <input type="text" asp-for="Customer.DocSeries" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Customer.DocNumber">Номер</label>
                    <input type="text" asp-for="Customer.DocNumber" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Customer.DocIssueDate">Дата выдачи</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text">
                            <i class="bi bi-calendar3"></i>
                        </span>
                        <input asp-for="Customer.DocIssueDate" type="text"
                               class="form-control pickdate">
                    </div>
                </div>
                <div class="col-12">
                    <label class="form-label" asp-for="Customer.DocIssuer">Кем выдан</label>
                    <input type="text" asp-for="Customer.DocIssuer" class="form-control">
                </div>
            </div>
            <hr />
            <div class="row mb-1">
                <div class="col-4">
                    <label class="form-label" asp-for="Customer.HomePhone">Телефон домашний с указанием кода города</label>
                    <input type="text" asp-for="Customer.HomePhone" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Customer.MobilePhone">Телефон мобильный</label>
                    <input type="text" asp-for="Customer.MobilePhone" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Customer.Email">Адрес электронной почты</label>
                    <input type="text" asp-for="Customer.Email" class="form-control">
                </div>
            </div>
            <hr />
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="ProvisionType">Вид обеспечения инвалида или ветерана</label>
                    <textarea asp-for="ProvisionType" rows="3" class="form-control"></textarea>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-6">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" asp-for="NeedAccompanied">
                        <label class="form-check-label" asp-for="NeedAccompanied">
                            Необходимость сопровождения
                        </label>
                    </div>
                </div>
            </div>
            <h5 class="my-2">Сопровождающий</h5>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="Accompanying.Fio">ФИО</label>
                    <input type="text" asp-for="Accompanying.Fio" class="form-control">
                </div>
            </div>
            <h6 class="my-2">Документ, удостоверяющий личность</h6>
            <div class="row mb-1">
                <div class="col-12">
                    <label class="form-label" asp-for="Accompanying.DocName">Наименование документа</label>
                    <select class="select2-nosearch" asp-for="Accompanying.DocName" data-value-value
                            data-dictionary='{"dictionary":"FnsDocTypes", "default_value":"@Model.Accompanying.DocName"}'>
                    </select>
                </div>

                <div class="col-4">
                    <label class="form-label" asp-for="Accompanying.DocSeries">Серия</label>
                    <input type="text" asp-for="Accompanying.DocSeries" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Accompanying.DocNumber">Номер</label>
                    <input type="text" asp-for="Accompanying.DocNumber" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Accompanying.DocIssueDate">Дата выдачи</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text">
                            <i class="bi bi-calendar3"></i>
                        </span>
                        <input asp-for="Accompanying.DocIssueDate" type="text"
                               class="form-control pickdate">
                    </div>
                </div>
                <div class="col-12">
                    <label class="form-label" asp-for="Accompanying.DocIssuer">Кем выдан</label>
                    <input type="text" asp-for="Accompanying.DocIssuer" class="form-control">
                </div>
            </div>
            <hr />
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="AppliedDocuments">Приложенные документы</label>
                    <select class="select2" multiple="multiple" asp-items="@docList" asp-for="AppliedDocuments"></select>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-6">
                    <label class="form-label" asp-for="MethodInforming">Способ информирования</label>
                    <select class="select2" asp-items="@methodInformingList" asp-for="MethodInforming"></select>
                </div>
                <div class="col-6" id="otherMethoInformingBlock">
                    <label class="form-label" asp-for="OtherMethoInforming">Иной способ информирования</label>
                    <input type="text" asp-for="OtherMethoInforming" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" asp-for="NeedSigner">
                        <label class="form-check-label" asp-for="NeedSigner">
                            Необходимость в предоставлении услуг по переводу русского жестового языка (сурдопереводу/тифлосурдопереводу).
                        </label>
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-6">
                    <label class="form-label" asp-for="MethodResult">Способ получения результата</label>
                    <select class="select2" asp-items="@methodResultList" asp-for="MethodResult"></select>
                </div>                
            </div>
            <div class="row mb-3">
                <div class="col-8">
                    <label class="form-label" asp-for="MethodListingCompensation">Способ перечислиния компенсации за самостоятельно приобретённое техническое средство (изделие)</label>
                    <select class="select2" asp-items="@methodListingCompensationList" asp-for="MethodListingCompensation"></select>
                </div>  
                <div class="col-4">
                    <label class="form-label" asp-for="PaymentCardNumber">№ платежной карты, являющейся национальным платежным инструментом</label>
                    <input type="text" asp-for="PaymentCardNumber" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" asp-for="ParticipateSMSQuestion">
                        <label class="form-check-label" asp-for="ParticipateSMSQuestion">
                            Согласие на участие в СМС-опросе о качестве предоставления государственных услуг
                        </label>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var additionalForm = $('#additional-data-content');

    $(function() {
        select2Init(additionalForm);

        additionalForm.find('#MethodInforming').on('change', function() {
            let $el = additionalForm.find('#otherMethoInformingBlock');
            switch ($(this).val()) {
                case '7':
                    visibilityBlock($el, false, false);
                    break;
                default: visibilityBlock($el, true, true);
            }
        });

        additionalForm.find('#MethodInforming').trigger('change');

        let options = { clearIncomplete: true, showMaskOnHover: false };
        additionalForm.find('[name$="Inn"]').inputmask("9{10,12}", options);
        additionalForm.find('[name$="Email"]').inputmask("email", options);
        additionalForm.find(".pickdate").datepicker({
            language: "ru",
            autoclose: true,
        }).inputmask("99.99.9999", options);

        (function getDictionaries() {
            let dicts = new Set();
            $('[data-dictionary]').each(function() {
                let $this = $(this);
                let options = $this.data('dictionary');
                if (!dicts.has(options.dictionary)) {
                    dicts.add(options.dictionary);
                    $.post(`/SmevBase/SmevGetDictionary`,
                        {
                            type: options.dictionary
                        },
                        function(dictionary) {
                            if (dictionary.error) return;
                            fillSelect(options.dictionary, dictionary);
                        });
                }
            });
        }());

        function fillSelect(dictName, dictionary) {
            $.each($(`[data-dictionary*='"${dictName}"']`),
                function() {
                    let $this = $(this);
                    let items = dictionary;
                    $this.empty();
                    if (!$this.hasClass('required')) {
                        $this.append(new Option('Не выбрано', ''));
                    }
                    if ($this.is('[data-value-value]')) {
                        items.dictionary.forEach(function(item) {
                            $this.append(new Option(item.value, item.value));
                        });
                    } else {
                        items.dictionary.forEach(function(item) {
                            $this.append(new Option(item.value, item.key));
                        });
                    }

                    if ($this.data('dictionary').default_value) {
                        let defVal = $this.data('dictionary').default_value;
                        if (defVal) {
                            $this.val(defVal).trigger('update');
                            $this.attr('data-def', defVal);
                        }
                    } else {
                        $this.val('').trigger('update');
                    }
                });
        }

        function visibilityBlock($block, hide, isDisabled) {
            switch (hide) {
                case true:
                    $block.hide();
                    break;
                case false:
                    $block.show();
                    break;
            }

            switch (isDisabled) {
                case true:
                    $block.find('input, select').each(function() {
                        $(this).prop('disabled', true);
                    });
                    break;
                case false:
                    $block.find('input, select').each(function() {
                        $(this).prop('disabled', false);
                    });
                    $block.find('[data-disabled]').each(function() {
                        visibilityBlock($(this), true, true);
                    });
                    break;
            }
        }

        function select2Init($block) {
            $block.find("select.select2-nosearch").each(function() {
                $(this).select2({
                    minimumResultsForSearch: Infinity
                });
            });

            $block.find("select.select2-search").each(function() {
                $(this).select2({
                });
            });
        }
    });
</script>