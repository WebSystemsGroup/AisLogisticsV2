@model AisLogistics.App.Models.AdditionalForms.PfrPregnantWomanFiredModel

<div id="additional-data-content">
    <div class="row g-3">
        <div class="col-8 mx-auto">
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="BenefitName">Вид пособия</label>
                    <input type="text" asp-for="BenefitName" class="form-control">
                </div>
            </div>
            <h5 class="my-2">Заявитель</h5>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="Customer.Fio">ФИО</label>
                    <input type="text" asp-for="Customer.Fio" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-4">
                    <label class="form-label" asp-for="Customer.BirthDate">Дата рождения</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text">
                            <i class="bi bi-calendar3"></i>
                        </span>
                        <input asp-for="Customer.BirthDate" type="text"
                               class="form-control pickdate">
                    </div>
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Customer.Phone">Телефон</label>
                    <input type="text" asp-for="Customer.Phone" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Customer.Email">Адрес электронной почты</label>
                    <input type="text" asp-for="Customer.Email" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="Customer.Address">Адрес места жительства (пребывания, фактического проживания) (указывается  регистрация  по  месту жительства  (пребывания, фактического проживания), почтовый индекс, телефон, адрес электронной почты (при наличии)) </label>
                    <input type="text" asp-for="Customer.Address" class="form-control">
                </div>
            </div>
            <h6 class="my-2">Документ, удостоверяющий личность</h6>
            <div class="row mb-1">
                <div class="col-12">
                    <label class="form-label" asp-for="Customer.DocName">Наименование документа</label>
                    <select class="select2-nosearch" asp-for="Customer.DocName" data-value-value
                            data-dictionary='{"dictionary":"FnsDocTypes", "default_value":"@Model.Customer.DocName"}'>
                    </select>
                </div>
            </div>
            <div class="row mb-1">
                <div class="col-4">
                    <label class="form-label" asp-for="Customer.DocSeries">Серия</label>
                    <input type="text" asp-for="Customer.DocSeries" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Customer.DocNumber">Номер</label>
                    <input type="text" asp-for="Customer.DocNumber" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Customer.DocIssueDate">Дата выдачи</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text">
                            <i class="bi bi-calendar3"></i>
                        </span>
                        <input asp-for="Customer.DocIssueDate" type="text"
                               class="form-control pickdate">
                    </div>
                </div>
            </div>
            <div class="row mb-1">
                <div class="col-12">
                    <label class="form-label" asp-for="Customer.DocIssuer">Кем выдан</label>
                    <input type="text" asp-for="Customer.DocIssuer" class="form-control">
                </div>
            </div>
            <hr />

            <h5 class="my-2">Кредитная организация</h5>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="CreditOrganization.Name">Наименование</label>
                    <input type="text" asp-for="CreditOrganization.Name" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-4">
                    <label class="form-label" asp-for="CreditOrganization.Bik">БИК</label>
                    <input type="text" asp-for="CreditOrganization.Bik" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="CreditOrganization.Inn">ИНН</label>
                    <input type="text" asp-for="CreditOrganization.Inn" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="CreditOrganization.Kpp">КПП</label>
                    <input type="text" asp-for="CreditOrganization.Kpp" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="CreditOrganization.AccountNumber">Номер счета заявителя</label>
                    <input type="text" asp-for="CreditOrganization.AccountNumber" class="form-control">
                </div>
            </div>
            <hr />

            <h5 class="my-2">Почтовое отделение</h5>
            <div class="row mb-3">
                <div class="col-9">
                    <label class="form-label" asp-for="PostalOffice.Address">Адрес получателя</label>
                    <input type="text" asp-for="PostalOffice.Address" class="form-control">
                </div>
                <div class="col-3">
                    <label class="form-label" asp-for="PostalOffice.Number">Номер почтового отделения</label>
                    <input type="text" asp-for="PostalOffice.Number" class="form-control">
                </div>
            </div>
            <hr />

            <h5 class="my-2">Приложенные документы</h5>
            <div id="appliedDocumentList" data-clone-list>
                @for (var i = 0; i < Model.AppliedDocumentList.Length; i++)
                {
                    <div class="g-3" id="clone@(i)" data-id="@i" data-clone>
                        <hr />
                        <h6 class="my-2 title">Документ @(i+1)</h6>
                        <div class="row mb-1 align-items-center">
                            <div class="col-11">
                                <div class="row mb-3">
                                    <div class="col-6">
                                        <label class="form-label" asp-for="AppliedDocumentList[i].Name">Наименование</label>
                                        <input type="text" asp-for="AppliedDocumentList[i].Name" class="form-control">
                                    </div>
                                    <div class="col-6">
                                        <label class="form-label" asp-for="AppliedDocumentList[i].SeriesNumber">Серия, номер</label>
                                        <input type="text" asp-for="AppliedDocumentList[i].SeriesNumber" class="form-control">
                                    </div>
                                    <div class="col-4">
                                        <label class="form-label" asp-for="AppliedDocumentList[i].IssueDate">Дата выдачи</label>
                                        <div class="input-group input-group-merge">
                                            <span class="input-group-text">
                                                <i class="bi bi-calendar3"></i>
                                            </span>
                                            <input asp-for="AppliedDocumentList[i].IssueDate" type="text"
                                               class="form-control pickdate">
                                        </div>
                                    </div>
                                    <div class="col-8">
                                        <label class="form-label" asp-for="AppliedDocumentList[i].Issuer">Кем выдан</label>
                                        <input type="text" asp-for="AppliedDocumentList[i].Issuer" class="form-control">
                                    </div>
                                </div>
                            </div>
                            <div class="col-1">
                                <button type="button" class="btn btn-danger" onclick="blockRemove(this)"><i class="bi bi-trash bx-sm"></i></button>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="row justify-content-center">
                <div class="col-2">
                    <button type="button" class="btn btn-primary" id="addAppliedDocument"><i class="bi bi-plus"></i></button>
                </div>
            </div>
            <hr />

            <h5 class="my-2">Представитель</h5>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="Representative.Fio">ФИО</label>
                    <input type="text" asp-for="Representative.Fio" class="form-control">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label" asp-for="Representative.Address">Место  жительства  (место пребывания, фактического проживания)</label>
                    <input type="text" asp-for="Representative.Address" class="form-control">
                </div>
            </div>
            <h6 class="my-2">Документ, удостоверяющий личность</h6>
            <div class="row mb-1">
                <div class="col-12">
                    <label class="form-label" asp-for="Representative.DocName">Наименование документа</label>
                    <select class="select2-nosearch" asp-for="Representative.DocName" data-value-value
                            data-dictionary='{"dictionary":"FnsDocTypes", "default_value":"@Model.Representative.DocName"}'>
                    </select>
                </div>
            </div>
            <div class="row mb-1">
                <div class="col-4">
                    <label class="form-label" asp-for="Representative.DocSeries">Серия</label>
                    <input type="text" asp-for="Representative.DocSeries" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Representative.DocNumber">Номер</label>
                    <input type="text" asp-for="Representative.DocNumber" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Representative.DocIssueDate">Дата выдачи</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text">
                            <i class="bi bi-calendar3"></i>
                        </span>
                        <input asp-for="Representative.DocIssueDate" type="text"
                               class="form-control pickdate">
                    </div>
                </div>
            </div>
            <div class="row mb-1">
                <div class="col-12">
                    <label class="form-label" asp-for="Representative.DocIssuer">Кем выдан</label>
                    <input type="text" asp-for="Representative.DocIssuer" class="form-control">
                </div>
            </div>
            <hr />
            <h6 class="my-2">Документ, подтверждающий полномочия представителя</h6>
            <div class="row mb-1">
                <div class="col-12">
                    <label class="form-label" asp-for="Representative.AuthorityDocName">Наименование документа</label>
                    <input type="text" asp-for="Representative.AuthorityDocName" class="form-control">
                </div>
            </div>
            <div class="row mb-1">
                <div class="col-4">
                    <label class="form-label" asp-for="Representative.AuthorityDocSeries">Серия</label>
                    <input type="text" asp-for="Representative.AuthorityDocSeries" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Representative.AuthorityDocNumber">Номер</label>
                    <input type="text" asp-for="Representative.AuthorityDocNumber" class="form-control">
                </div>
                <div class="col-4">
                    <label class="form-label" asp-for="Representative.AuthorityDocIssueDate">Дата выдачи</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text">
                            <i class="bi bi-calendar3"></i>
                        </span>
                        <input asp-for="Representative.AuthorityDocIssueDate" type="text"
                               class="form-control pickdate">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="originalBlock">
    <div class="g-3" id="appliedDocument" data-id="" data-original>
        <hr />
        <h6 class="my-2 title">Документ 0</h6>
        <div class="row mb-1 align-items-center">
            <div class="col-11">
                <div class="row mb-3">
                    <div class="col-6">
                        <label class="form-label" asp-for="AppliedDocumentList[0].Name">Наименование</label>
                        <input type="text" asp-for="AppliedDocumentList[0].Name" class="form-control">
                    </div>
                    <div class="col-6">
                        <label class="form-label" asp-for="AppliedDocumentList[0].SeriesNumber">Серия, номер</label>
                        <input type="text" asp-for="AppliedDocumentList[0].SeriesNumber" class="form-control">
                    </div>
                    <div class="col-4">
                        <label class="form-label" asp-for="AppliedDocumentList[0].IssueDate">Дата выдачи</label>
                        <div class="input-group input-group-merge">
                            <span class="input-group-text">
                                <i class="bi bi-calendar3"></i>
                            </span>
                            <input asp-for="AppliedDocumentList[0].IssueDate" type="text"
                                   class="form-control pickdate">
                        </div>
                    </div>
                    <div class="col-8">
                        <label class="form-label" asp-for="AppliedDocumentList[0].Issuer">Кем выдан</label>
                        <input type="text" asp-for="AppliedDocumentList[0].Issuer" class="form-control">
                    </div>
                </div>
            </div>
            <div class="col-1">
                <button type="button" class="btn btn-danger" onclick="blockRemove(this)"><i class="bi bi-trash bx-sm"></i></button>
            </div>
        </div>
    </div>
</div>

<script>
    var additionalForm = $('#additional-data-content');
    var originalBlock = $('#originalBlock');

    $(function() {
        additionalForm.find('#addAppliedDocument').on('click', () => addForm('appliedDocumentList', 'appliedDocument'));


        originalBlock.find('[data-original]').each(function(_, item) {
            renameBlock($(item), 100, true);
            visibilityBlock($(item), true, true);
        });

        select2Init(additionalForm);
        let options = { clearIncomplete: true, showMaskOnHover: false };
        additionalForm.find('[name$="Snils"]').inputmask("9{3}-9{3}-9{3} 9{2}", options);
        additionalForm.find('[name$="Email"]').inputmask("email", options);
        additionalForm.find(".pickdate").datepicker({
            language: "ru",
            autoclose: true,
        }).inputmask("99.99.9999", options);

        (function getDictionaries() {
            let dicts = new Set();
            $('[data-dictionary]').each(function() {
                let $this = $(this);
                let options = $this.data('dictionary');
                if (!dicts.has(options.dictionary)) {
                    dicts.add(options.dictionary);
                    $.post(`/SmevBase/SmevGetDictionary`,
                        {
                            type: options.dictionary
                        },
                        function(dictionary) {
                            if (dictionary.error) return;
                            fillSelect(options.dictionary, dictionary);
                        });
                }
            });
        }());

        function fillSelect(dictName, dictionary) {
            $.each($(`[data-dictionary*='"${dictName}"']`),
                function() {
                    let $this = $(this);
                    let items = dictionary;
                    $this.empty();
                    if (!$this.hasClass('required')) {
                        $this.append(new Option('Не выбрано', ''));
                    }
                    if ($this.is('[data-value-value]')) {
                        items.dictionary.forEach(function(item) {
                            $this.append(new Option(item.value, item.value));
                        });
                    } else {
                        items.dictionary.forEach(function(item) {
                            $this.append(new Option(item.value, item.key));
                        });
                    }

                    if ($this.data('dictionary').default_value) {
                        let defVal = $this.data('dictionary').default_value;
                        if (defVal) {
                            $this.val(defVal).trigger('update');
                            $this.attr('data-def', defVal);
                        }
                    } else {
                        $this.val('').trigger('update');
                    }
                });
        }
    });

    function select2Init($block) {
        $block.find("select.select2-nosearch").each(function() {
            $(this).select2({
                minimumResultsForSearch: Infinity
            });
        });

        $block.find("select.select2-search").each(function() {
            $(this).select2({
            });
        });
    }

    function blockRemove(el) {
        let $cloneList = $(el).closest('[data-clone-list]');
        el.closest('[data-clone]').remove();
        $cloneList.find('[data-clone]').each(function(index, item) {
            renameBlock($(item), index);
        });
    }

    function renameBlock($cloneBlock, indexId, initOriginal = false) {
        if (!initOriginal) {
            $cloneBlock.find('.title').text($cloneBlock.find('.title').text().replace(/\d+/, indexId + 1));
            $cloneBlock.attr("id", `clone${indexId}`);
            $cloneBlock.attr('data-id', indexId);
            $cloneBlock.attr('data-clone', '');
            $cloneBlock.removeAttr('data-original');
        }

        $cloneBlock.find('input, select, div').each(function() {
            $(this).attr('id', $(this).attr('id')?.replace(/\d+/, indexId));
            if ($(this).is('[name]')) {
                $(this).attr('name', $(this).attr('name').replace(/\d+/, indexId));
            }
        });

        $cloneBlock.find('label').each(function() {
            $(this).attr('for', $(this).attr('for').replace(/\d+/, indexId));
        });
    }

    function visibilityBlock($block, hide, isDisabled) {
        switch (hide) {
            case true:
                $block.hide();
                break;
            case false:
                $block.show();
                break;
        }

        switch (isDisabled) {
            case true:
                $block.find('input, select').each(function() {
                    $(this).prop('disabled', true);
                });
                break;
            case false:
                $block.find('input, select').each(function() {
                    $(this).prop('disabled', false);
                });
                $block.find('[data-disabled]').each(function() {
                    visibilityBlock($(this), true, true);
                });
                break;
        }
    }

    function addForm(cloneListId, originalId) {
        let $cloneList = additionalForm.find(`#${cloneListId}`);
        let $original = originalBlock.find(`#${originalId}`);
        let $cloneBlock = $original.clone(true);
        let indexId = $cloneList.find('[data-clone]').length;
        renameBlock($cloneBlock, indexId);
        blockInit($cloneBlock);
        $cloneList.find("select").each(function() {
            $(this).select2('destroy');
        });
        $cloneList.append($cloneBlock);
        select2Init($cloneList);
    }

    function blockInit($block) {
        visibilityBlock($block, false, false);

        $block.find("input").each(function() {
            $(this).val("");
        });
        let options = { clearIncomplete: true, showMaskOnHover: false }

        $block.find(".pickdate").datepicker({
            language: "ru",
            autoclose: true
        }).inputmask("99.99.9999", options);
    }
</script>