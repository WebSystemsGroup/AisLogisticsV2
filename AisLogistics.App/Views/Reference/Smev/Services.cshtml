@model ViewModelBuilder
@{
    ViewBag.Title = Model.ViewTitle;
    ViewData["ActiveTabId"] = "services";
}
<div class="row directory_names" id="content-smev-services">
    <div class="row">
        <navtabs-top>
            <nav-tab id="services" target="@Url.Action("SmevServices", "Reference")">Сервисы</nav-tab>
            <nav-tab id="requests" target="@Url.Action("SmevRequests", "Reference")">Запросы</nav-tab>
        </navtabs-top>
        <div class="directory_names-items popup_container" id="navs-tabs-default">

            <div class="row justify-content-between align-items-center">
                <div class="col">

                    @if (Model.IsVisibleDescription)
                    {
                        <div class="b-s-14">@Model.ViewDescription</div>
                    }
                </div> 
            </div>

            <div class="table-responsive mt-3">
                <table asp-for="Model" asp-access-key-name="@AccessKeyNames.ReferenceDocument" class="directory_names-items table"></table>
            </div>
        </div>
    </div>
</div>


@section Scripts
    {
    <script>
        const $table = $('#@(Model.TableName)'),
            isCanAdd = $table.is('[data-action-add]'),
            isCanEdit = $table.is('[data-action-edit]'),
            isCanRemove = $table.is('[data-action-remove]');

        $(document).ready(function () {
            $table.DataTable({
                sDom: "<'row align-items-center'<'col-sm-12 col-md-6 'f><'col-auto mt-3'l><'col mt-3 ms-auto text-end'<'#btnCreate'>>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
                processing: true,
                serverSide: true,
                filter: true,
                searching: true,
                searchDelay: 1500,
                ajax: {
                    url: $table.data('action-table'),
                    type: "POST",
                    datatype: "json",
                    dataSrc: function (json) {
                        return json.data;
                    }
                },
                initComplete: function () {
                    $('[name="mainDataTable_length"]')
                        .select2({ minimumResultsForSearch: Infinity })
                    $('#btnCreate').append(`<button data-btn-params='{"actionType":"@ActionType.Add"}' data-btn-type="add" data-for-table="@Model.TableName" type="button" class="btn btn-primary">
                                <i class="bi bi-plus"></i> Добавить
                            </button>`);
                },
                columnDefs: [
                    {
                        data: "id",
                        targets: 0,
                        title: '',
                        visible: false,
                        orderable: false
                    },
                    {
                        targets: 1,
                        title: "Наименование",
                        orderable: false
                    },
                    {
                        targets: 2,
                        title: "Владелец",
                        orderable: false
                    },
                    {
                        targets: 3,
                        title: "Код",
                        orderable: false
                    },
                    {
                        targets: 4,
                        title: "Оператор ИС",
                        orderable: false
                    },
                    {
                        targets: 5,
                        title: "Описание",
                        orderable: false
                    },
                    {
                        targets: 6,
                        title: "Адрес",
                        orderable: false
                    },
                    {
                        targets: 7,
                        title: "СМЭВ&nbsp;3",
                        className: "text-center",
                        orderable: false
                    },
                    {
                        targets: -1,
                        title: "Действия",
                        data: "id",
                        className: "text-center editor-edit",
                        sorting: false,
                        orderable: false
                    }
                ],
                columns: [
                    {},
                    {
                        render: function (data, type, row) {
                            return `<span>${row.smevName}<span>
                                    ${row.smevMnemo === null ? '' : '<br /><small>' + row.smevMnemo + '</small>'}`;
                        }
                    },
                    { data: "smevProvider" },
                    { data: "providerCode" },
                    { data: "providerName" },
                    { data: "smevDescription" },
                    { data: "providerUrl" },
                    {
                        data: "isSmev3",
                        render: function (data, type, row) {
                            return `${data === true ? '<i class="bi bi-check-circle text-success"></i>' : '<i class="bi bi-x-circle text-danger"></i>'}`;
                        }
                    },
                    {
                        render: function (data, type, row) {
                            let content = "";
                            if (isCanEdit === true)
                                content += EditBtn({ "id": data, "actionType": 1 });
                            if (isCanRemove === true)
                                content += DeleteBtn({ "id": data });
                            return content;
                        }
                    }
                ]
            });
            $table.on("reload", () => {
                $table.DataTable().ajax.reload(null, false);
            });
            $table.on('draw.dt', function () {
                var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
                var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                    return new bootstrap.Tooltip(tooltipTriggerEl, {
                        boundary: document.body
                    });
                });
            });
        });

        const EditBtn = (data) => {
            const params = JSON.stringify(data);
            return `<a href="javascript:void(0);" data-btn-params='${params}' data-btn-type="edit" data-bs-toggle="tooltip" title="Изменить" class="btn btn-sm btn-icon text-body">
                    <i class="bi bi-pencil-square"></i></a>`;
        }
        const DeleteBtn = (data) => {
            const params = JSON.stringify(data);
            return `<a href="javascript:void(0);" data-btn-params='${params}' data-btn-type="remove" data-bs-toggle="tooltip" title="Удалить" class="btn btn-sm btn-icon text-danger">
                    <i class="bi bi-trash"></i></a>`;
        }
    </script>
}