@model ViewModelBuilder
@using AisLogistics.App.Extensions
@{
    string Id = ViewContext.RouteData.Values["Id"]?.ToString();
    string navId = "qualities";
}
<style>
    .nav-tabs .nav-link {
        border-style: none !important;
    }

    .aside_menu .nav {
        display: block !important;
        border-style: none !important;
        border-right: none !important;
    }

    html:not([dir=rtl]) .border-end {
        border-right: none !important;
    }

   .aside_menu .nav-link.active:not(.nav-link.active.active-color) {
        font-size: 18px !important;
        color: #172359 !important;
        margin-top: 0 !important;
        margin-bottom: 15px;
        border-bottom: none;
        font-family: 'golos-bold' !important;
        font-weight: 500;
        line-height: 1.2;
    }

    .aside_menu .nav-link {
        padding: 0 !important;
    }

    .form-control:disabled, .form-control[readonly] {
        background-color: #fff !important;
        border: 1px solid #ced4da !important;
    }
</style>

<div class="row directory_names" id="content-providers">
    <div class="col-2 aside_menu">
                <partial name="Services/Details/_NavLeft" model="navId" />
            </div>
            <div class="col-10 px-4">
                <div class="directory_names-items popup_container" id="navs-tabs-default">

                    <div class="row justify-content-between align-items-center">
                        <div class="col">

                            @if (Model.IsVisibleDescription)
                            {
                                <h1>
                                    @Model.ViewDescription
                                </h1>
                            }
                        </div>
                                    @if (User.HasClaim(AccessKeyNames.ReferenceService, AccessKeyValues.Add))
                                    {
                    <div class="col-md-2 text-md-end directory_search">
                                            <button data-btn-params='{"actionType":"@ActionType.Add", "serviceId" : "@Id" }' data-btn-type="add" data-for-table="@Model.TableName" type="button" class="btn btn-primary">
                                                <i class="bx bx-plus"></i> Добавить
                                            </button>
                                        </div>
                                    }
                                </div>
                                <div class="table-responsive">
                                    <table asp-for="Model" asp-access-key-name="@AccessKeyNames.ReferenceService" class="directory_names-items table"></table>
                                </div>
                            </div>
                        </div>
                    </div>
              

@section Scripts
{
    <script>
        const $table = $('#@(Model.TableName)'), 
            isCanAdd = $table.is('[data-action-add]'),
            isCanEdit = $table.is('[data-action-edit]'),
            isCanRemove = $table.is('[data-action-remove]');

        $(document).ready(function() {
            $table.DataTable({
                sDom: "<'row me-5 pe-1'<'col-sm-12 col-md-8 'f><'col-sm-12 col-md-3 w-25'l>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
                processing: true,
                serverSide: true,
                filter: true,
                searching: false,
                ajax: {
                    url: $table.data('action-table'),
                    type: "POST",
                    datatype: "json",
                    dataSrc: function(json) {
                        return json.data;
                    }
                },
                 initComplete: function () {
                    $('[name="mainDataTable_length"]')
                    .select2({minimumResultsForSearch: Infinity})
                },
                columnDefs: [
                    {
                        data: "id",
                        targets: 0,
                        title: '',
                        visible: false,
                        orderable: false
                    },
                    {
                        targets: 1,
                        title: 'Наименование',
                        orderable: false
                    },
                    {
                        targets: -1,
                        title: 'Действия',
                        data: "id",
                        width: "80px",
                        className: 'text-center editor-edit',
                        sorting: false,
                        orderable: false
                    }
                ],
                columns: [
                    { },
                    {
                        data: "typeName"
                    },
                    {
                        render: function(data, type, row) {
                            let content = "";
                            if (isCanEdit === true) 
                                content += EditBtn({ "id": data, "actionType": 1, "serviceId": "@Id" });
                            if (isCanRemove === true) 
                                content += DeleteBtn({ "id": data });
                            return content;
                        }
                    }
                ]
            });
            $table.on("reload", () => {
                $table.DataTable().ajax.reload(null, false);
            });
        });

        $table.on('draw.dt', function () {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl, {
                    boundary: document.body
                });
            });
        });

        const EditBtn = (data) => {
            const params = JSON.stringify(data);
            return `<a href="javascript:void(0);" data-btn-params='${params}' data-btn-type="edit" data-bs-toggle="tooltip" title="Изменить" class="btn btn-sm btn-icon text-body">
            <i class="bx bx-edit"></i></a>`;
        }

        const DeleteBtn = (data) => {
            const params = JSON.stringify(data);
            return `<a href="javascript:void(0);" data-btn-params='${params}' data-btn-type="remove" data-bs-toggle="tooltip" title="Удалить" class="btn btn-sm btn-icon text-danger">
            <i class="bx bx-trash"></i></a>`;
        }
    </script>
}